#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин спр. ВидыНоменклатуры экспорт из Розницы",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Номенклатура) Экспорт
	
	
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Обк = Номенклатура.ПолучитьОбъект(); 
	Иначе 
		Обк = Номенклатура; 
	КонецЕсли;

	
	// todo
	//ТЧ "Доп. реквизиты" - скрипт в КД2
	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	//	DEFINITION
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	definition.Вставить("Артикул", обк.Артикул);//строка, 50
	definition.Вставить("НаименованиеПолное", обк.НаименованиеПолное);
	//definition.Вставить("Весовой", обк.Весовой);//нет такого реквизита в ЕРП, а в КД2 - есть

	#Область ВидНоменклатуры
	ВидНоменклатуры = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидНоменклатуры);//справочник
	definition.Вставить("ВидНоменклатуры", ВидНоменклатуры); 	
	#КонецОбласти

	// нет такого реквизита в ЕРП
	//#Область НоменклатурнаяГруппа
	//НоменклатурнаяГруппа = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НоменклатурнаяГруппа);//справочник
	//definition.Вставить("НоменклатурнаяГруппа", НоменклатурнаяГруппа); 	
	//#КонецОбласти
	
	#Область СтавкаНДС
	СтавкаНДС = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СтавкаНДС);//сравочник
	definition.Вставить("СтавкаНДС", СтавкаНДС); 	
	#КонецОбласти
	
	#Область СтранаПроисхождения
	СтранаПроисхождения = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СтранаПроисхождения);//справочник
	definition.Вставить("СтранаПроисхождения", СтранаПроисхождения); 	
	#КонецОбласти
	
	#Область ТипНоменклатуры
	ТипНоменклатуры = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ТипНоменклатуры);//перечисление
	definition.Вставить("ТипНоменклатуры", ТипНоменклатуры); 	
	#КонецОбласти
	
	//definition.Вставить("БазоваяЕдиницаИзмерения", обк.БазоваяЕдиницаИзмерения);//нет такого реквизита
	
	#Область ЕдиницаИзмерения
	ЕдиницаИзмерения = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЕдиницаИзмерения);//справочник
	definition.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения); 	
	#КонецОбласти

	//definition.Вставить("Комментарий", обк.Комментарий);
	definition.Вставить("АлкогольнаяПродукция", обк.АлкогольнаяПродукция);//бул
	definition.Вставить("ИмпортнаяАлкогольнаяПродукция", обк.ИмпортнаяАлкогольнаяПродукция);//бул
	//definition.Вставить("ОбъемДАЛ", обк.ОбъемДАЛ);//число
	//
	//
	//#Область ВидАлкогольнойПродукцииЕГАИС
	//ВидАлкогольнойПродукцииЕГАИС = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидАлкогольнойПродукцииЕГАИС);//справочник
	//definition.Вставить("ВидАлкогольнойПродукцииЕГАИС", ВидАлкогольнойПродукцииЕГАИС); 	
	//#КонецОбласти
	//
	//definition.Вставить("Крепость", обк.Крепость);
	//
	//#Область Производитель
	//Производитель = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Производитель);//справочник
	//definition.Вставить("Производитель", Производитель); 	
	//#КонецОбласти
	
	#Область КодТНВЭД
	КодТНВЭД = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.КодТНВЭД);//справочник
	definition.Вставить("КодТНВЭД", КодТНВЭД); 	
	#КонецОбласти

	#Область ЦеноваяГруппа
	ЦеноваяГруппа = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЦеноваяГруппа);
	definition.Вставить("ЦеноваяГруппа", ЦеноваяГруппа);
	#КонецОбласти

	//нет реквизита
	//#Область ВидПродукцииИС
	//ВидПродукцииИС = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидПродукцииИС);
	//definition.Вставить("ВидПродукцииИС", ВидПродукцииИС);
	//#КонецОбласти
	
	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции
