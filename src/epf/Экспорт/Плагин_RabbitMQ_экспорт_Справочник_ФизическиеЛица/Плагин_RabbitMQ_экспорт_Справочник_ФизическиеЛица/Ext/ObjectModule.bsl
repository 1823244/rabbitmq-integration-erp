#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_ФизическиеЛица");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_ФизическиеЛица");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Справочник_ФизическиеЛица",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_ФизическиеЛица",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


Функция ВыгрузитьОбъект(ДанныеСсылка) Экспорт
	Если ТипЗнч(ДанныеСсылка) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Обк = ДанныеСсылка.ПолучитьОбъект(); 
	Иначе 
		Обк = ДанныеСсылка; 
	КонецЕсли;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	//	DEFINITION          
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	definition.Вставить("ВидОсобойЗоны", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидОсобойЗоны));
	definition.Вставить("ГруппаДоступа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГруппаДоступа));
	definition.Вставить("ДатаРегистрации", Обк.ДатаРегистрации);
	definition.Вставить("ДатаРождения", Обк.ДатаРождения);
	definition.Вставить("ИмеетИзобретения", Обк.ИмеетИзобретения);
	definition.Вставить("ИмеетНаучныеТруды", Обк.ИмеетНаучныеТруды);
	definition.Вставить("Имя", Обк.Имя);
	definition.Вставить("Инициалы", Обк.Инициалы);
	definition.Вставить("ИНН", Обк.ИНН);
	definition.Вставить("ЛьготаПриНачисленииПособий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЛьготаПриНачисленииПособий));
	definition.Вставить("МестоРождения", Обк.МестоРождения);
	definition.Вставить("НаименованиеСлужебное", Обк.НаименованиеСлужебное);
	definition.Вставить("ОтношениеКОсобойЗоне", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ОтношениеКОсобойЗоне));
	definition.Вставить("Отчество", Обк.Отчество);
	definition.Вставить("Пол", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Пол));
	definition.Вставить("ПостоянноПроживалВКрыму18Марта2014Года", Обк.ПостоянноПроживалВКрыму18Марта2014Года);
	definition.Вставить("СтраховойНомерПФР", Обк.СтраховойНомерПФР);
	definition.Вставить("УдалитьИнициалыИмени", Обк.УдалитьИнициалыИмени);
	definition.Вставить("УточнениеНаименования", Обк.УточнениеНаименования);
	definition.Вставить("Фамилия", Обк.Фамилия);
	definition.Вставить("ФИО", Обк.ФИО);

	//------------------------------------------------------     ТЧ КонтактнаяИнформация

	ТЧКонтактнаяИнформация = Новый Массив;

	Для сч = 0 По обк.КонтактнаяИнформация.Количество()-1 Цикл

		стрк = обк.КонтактнаяИнформация[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("АдресЭП", стрк.АдресЭП);
		НовСтр.Вставить("Вид", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Вид));
		НовСтр.Вставить("ВидДляСписка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидДляСписка));
		НовСтр.Вставить("Город", стрк.Город);
		НовСтр.Вставить("ДоменноеИмяСервера", стрк.ДоменноеИмяСервера);
		НовСтр.Вставить("Значение", стрк.Значение);
		НовСтр.Вставить("ЗначенияПолей", стрк.ЗначенияПолей);
		НовСтр.Вставить("НомерТелефона", стрк.НомерТелефона);
		НовСтр.Вставить("НомерТелефонаБезКодов", стрк.НомерТелефонаБезКодов);
		НовСтр.Вставить("Представление", стрк.Представление);
		НовСтр.Вставить("Регион", стрк.Регион);
		НовСтр.Вставить("Страна", стрк.Страна);
		НовСтр.Вставить("Тип", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Тип));
		ТЧКонтактнаяИнформация.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧКонтактнаяИнформация", ТЧКонтактнаяИнформация);

	//------------------------------------------------------     ТЧ ДополнительныеРеквизиты

	ТЧДополнительныеРеквизиты = Новый Массив;

	Для сч = 0 По обк.ДополнительныеРеквизиты.Количество()-1 Цикл

		стрк = обк.ДополнительныеРеквизиты[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("Значение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Значение));
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ТекстоваяСтрока", стрк.ТекстоваяСтрока);
		ТЧДополнительныеРеквизиты.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧДополнительныеРеквизиты", ТЧДополнительныеРеквизиты);

	//------------------------------------------------------     ТЧ УдалитьСоставСемьи

	ТЧУдалитьСоставСемьи = Новый Массив;

	Для сч = 0 По обк.УдалитьСоставСемьи.Количество()-1 Цикл

		стрк = обк.УдалитьСоставСемьи[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДатаРождения", стрк.ДатаРождения);
		НовСтр.Вставить("Имя", стрк.Имя);
		НовСтр.Вставить("СтепеньРодства", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СтепеньРодства));
		ТЧУдалитьСоставСемьи.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьСоставСемьи", ТЧУдалитьСоставСемьи);

	//------------------------------------------------------     ТЧ УдалитьОбразование

	ТЧУдалитьОбразование = Новый Массив;

	Для сч = 0 По обк.УдалитьОбразование.Количество()-1 Цикл

		стрк = обк.УдалитьОбразование[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ВидОбразования", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидОбразования));
		НовСтр.Вставить("ГодОкончания", стрк.ГодОкончания);
		НовСтр.Вставить("Диплом", стрк.Диплом);
		НовСтр.Вставить("Квалификация", стрк.Квалификация);
		НовСтр.Вставить("Специальность", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Специальность));
		НовСтр.Вставить("УчебноеЗаведение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УчебноеЗаведение));
		ТЧУдалитьОбразование.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьОбразование", ТЧУдалитьОбразование);

	//------------------------------------------------------     ТЧ УдалитьТрудоваяДеятельность

	ТЧУдалитьТрудоваяДеятельность = Новый Массив;

	Для сч = 0 По обк.УдалитьТрудоваяДеятельность.Количество()-1 Цикл

		стрк = обк.УдалитьТрудоваяДеятельность[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДатаНачала", стрк.ДатаНачала);
		НовСтр.Вставить("ДатаОкончания", стрк.ДатаОкончания);
		НовСтр.Вставить("Должность", стрк.Должность);
		НовСтр.Вставить("Организация", стрк.Организация);
		ТЧУдалитьТрудоваяДеятельность.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьТрудоваяДеятельность", ТЧУдалитьТрудоваяДеятельность);

	//------------------------------------------------------     ТЧ УдалитьЗнаниеЯзыков

	ТЧУдалитьЗнаниеЯзыков = Новый Массив;

	Для сч = 0 По обк.УдалитьЗнаниеЯзыков.Количество()-1 Цикл

		стрк = обк.УдалитьЗнаниеЯзыков[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("СтепеньЗнанияЯзыка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СтепеньЗнанияЯзыка));
		НовСтр.Вставить("Язык", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Язык));
		ТЧУдалитьЗнаниеЯзыков.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьЗнаниеЯзыков", ТЧУдалитьЗнаниеЯзыков);

	//------------------------------------------------------     ТЧ УдалитьПрофессии

	ТЧУдалитьПрофессии = Новый Массив;

	Для сч = 0 По обк.УдалитьПрофессии.Количество()-1 Цикл

		стрк = обк.УдалитьПрофессии[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("Профессия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Профессия));
		ТЧУдалитьПрофессии.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьПрофессии", ТЧУдалитьПрофессии);

	//------------------------------------------------------     ТЧ УдалитьСтажи

	ТЧУдалитьСтажи = Новый Массив;

	Для сч = 0 По обк.УдалитьСтажи.Количество()-1 Цикл

		стрк = обк.УдалитьСтажи[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ВидСтажа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидСтажа));
		НовСтр.Вставить("ДатаОтсчета", стрк.ДатаОтсчета);
		НовСтр.Вставить("РазмерДней", стрк.РазмерДней);
		НовСтр.Вставить("РазмерМесяцев", стрк.РазмерМесяцев);
		ТЧУдалитьСтажи.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьСтажи", ТЧУдалитьСтажи);

	//------------------------------------------------------     ТЧ УдалитьНаграды

	ТЧУдалитьНаграды = Новый Массив;

	Для сч = 0 По обк.УдалитьНаграды.Количество()-1 Цикл

		стрк = обк.УдалитьНаграды[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДатаПриказа", стрк.ДатаПриказа);
		НовСтр.Вставить("Награда", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Награда));
		НовСтр.Вставить("НомерПриказа", стрк.НомерПриказа);
		НовСтр.Вставить("ЧейПриказ", стрк.ЧейПриказ);
		ТЧУдалитьНаграды.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьНаграды", ТЧУдалитьНаграды);

	//------------------------------------------------------     ТЧ УдалитьУченыеСтепени

	ТЧУдалитьУченыеСтепени = Новый Массив;

	Для сч = 0 По обк.УдалитьУченыеСтепени.Количество()-1 Цикл

		стрк = обк.УдалитьУченыеСтепени[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДатаПрисужденияУченойСтепени", стрк.ДатаПрисужденияУченойСтепени);
		НовСтр.Вставить("ДипломВыданОрганизация", стрк.ДипломВыданОрганизация);
		НовСтр.Вставить("ДипломСерияНомер", стрк.ДипломСерияНомер);
		НовСтр.Вставить("ДиссертационныйСовет", стрк.ДиссертационныйСовет);
		НовСтр.Вставить("ОтрасльНауки", стрк.ОтрасльНауки);
		НовСтр.Вставить("УченаяСтепень", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УченаяСтепень));
		ТЧУдалитьУченыеСтепени.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьУченыеСтепени", ТЧУдалитьУченыеСтепени);

	//------------------------------------------------------     ТЧ УдалитьУченыеЗвания

	ТЧУдалитьУченыеЗвания = Новый Массив;

	Для сч = 0 По обк.УдалитьУченыеЗвания.Количество()-1 Цикл

		стрк = обк.УдалитьУченыеЗвания[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("АттестатВыданОрганизация", стрк.АттестатВыданОрганизация);
		НовСтр.Вставить("АттестатНомер", стрк.АттестатНомер);
		НовСтр.Вставить("АттестатСерия", стрк.АттестатСерия);
		НовСтр.Вставить("ДатаПрисвоенияУченогоЗвания", стрк.ДатаПрисвоенияУченогоЗвания);
		НовСтр.Вставить("НаучнаяСпециальность", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.НаучнаяСпециальность));
		НовСтр.Вставить("УченоеЗвание", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УченоеЗвание));
		ТЧУдалитьУченыеЗвания.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧУдалитьУченыеЗвания", ТЧУдалитьУченыеЗвания);




	//------------------------------------------------------ ФИНАЛ


	СтруктураОбъекта.Вставить("definition", definition);
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	Возврат json;
КонецФункции

Функция ПолучитьОбъектыДляВыгрузки(Узел) Экспорт
	Возврат Неопределено;
КонецФункции

Функция getRoutingKey() Экспорт
	Возврат "static";
КонецФункции

