#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Документ_РасходныйОрдерНаТовары");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Документ_РасходныйОрдерНаТовары");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Документ_РасходныйОрдерНаТовары",
		"Форма_Плагин_RabbitMQ_экспорт_Документ_РасходныйОрдерНаТовары",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Ссылка) Экспорт
	
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		Обк = Ссылка.ПолучитьОбъект(); 
	Иначе 
		Обк = Ссылка; 
	КонецЕсли;

	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	//	DEFINITION
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	//Таблица:	Шапка	

		
	definition.Вставить("ВсегоМест", Обк.ВсегоМест);
	definition.Вставить("ДатаОтгрузки", XMLСтрока(Обк.ДатаОтгрузки));
	definition.Вставить("ЗаданиеНаПеревозку", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЗаданиеНаПеревозку));
	definition.Вставить("ЗонаОтгрузки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЗонаОтгрузки));
	definition.Вставить("Комментарий", Обк.Комментарий);
	definition.Вставить("Контролер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Контролер));
	definition.Вставить("Ответственный", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ответственный));
	definition.Вставить("ОтгрузкаПоЗаданиюНаПеревозку", Обк.ОтгрузкаПоЗаданиюНаПеревозку);
	definition.Вставить("Получатель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Получатель));
	definition.Вставить("Помещение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Помещение));
	definition.Вставить("ПорядокДоставки", Обк.ПорядокДоставки);
	definition.Вставить("Приоритет", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Приоритет));
	definition.Вставить("РежимПросмотраПоТоварам", Обк.РежимПросмотраПоТоварам);
	definition.Вставить("Склад", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Склад));
	definition.Вставить("СкладскаяОперация", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СкладскаяОперация));
	definition.Вставить("Статус", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Статус));



	// Таблица: ТоварыПоРаспоряжениям
	
	ТЧТовары = Новый Массив;
	
	Для сч = 0 По обк.ТоварыПоРаспоряжениям.Количество()-1 Цикл
		
		стрк = обк.ТоварыПоРаспоряжениям[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("Количество", стрк.Количество);
		НовСтр.Вставить("Назначение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Назначение));
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("Распоряжение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Распоряжение));
		НовСтр.Вставить("Серия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Серия));
		НовСтр.Вставить("СтатусУказанияСерий", стрк.СтатусУказанияСерий);
		НовСтр.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика));

		ТЧТовары.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧТоварыПоРаспоряжениям", ТЧТовары);
	
	
	// Таблица: ОтгружаемыеТовары
	
	ТЧОтгружаемыеТовары = Новый Массив;
	
	Для сч = 0 По обк.ОтгружаемыеТовары.Количество()-1 Цикл
		
		стрк = обк.ОтгружаемыеТовары[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("Действие", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Действие));
		НовСтр.Вставить("Количество", стрк.Количество);
		НовСтр.Вставить("КоличествоУпаковок", стрк.КоличествоУпаковок);
		НовСтр.Вставить("Назначение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Назначение));
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("Серия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Серия));
		НовСтр.Вставить("СтатусУказанияСерий", стрк.СтатусУказанияСерий);
		НовСтр.Вставить("Упаковка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Упаковка));
		НовСтр.Вставить("УпаковочныйЛист", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УпаковочныйЛист));
		НовСтр.Вставить("УпаковочныйЛистРодитель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УпаковочныйЛистРодитель));
		НовСтр.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика));
		НовСтр.Вставить("ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста", стрк.ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста);
		НовСтр.Вставить("ЭтоУпаковочныйЛист", стрк.ЭтоУпаковочныйЛист);

		ТЧОтгружаемыеТовары.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧОтгружаемыеТовары", ТЧОтгружаемыеТовары);
	
	
	
	// Таблица: ШтрихкодыУпаковок ШтрихкодыУпаковок
	
	ТЧШтрихкодыУпаковок = Новый Массив;
	
	Для сч = 0 По обк.ШтрихкодыУпаковок.Количество()-1 Цикл
		
		стрк = обк.ШтрихкодыУпаковок[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("ШтрихкодУпаковки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ШтрихкодУпаковки));

		ТЧШтрихкодыУпаковок.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧШтрихкодыУпаковок", ТЧШтрихкодыУпаковок);
	
	
		
	
	
	
	//Таблица:	ДополнительныеРеквизиты	

	ТЧДополнительныеРеквизиты = Новый Массив;
	
    Для сч = 0 По обк.ДополнительныеРеквизиты.Количество()-1 Цикл
		
		стрк = обк.ДополнительныеРеквизиты[сч];
		
		СтрокаТовары = Новый Структура;

		СтрокаТовары.Вставить("Значение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Значение)); 	
		СтрокаТовары.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство)); 	
		СтрокаТовары.Вставить("ТекстоваяСтрока", стрк.ТекстоваяСтрока); 	

		ТЧДополнительныеРеквизиты.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧДополнительныеРеквизиты", ТЧДополнительныеРеквизиты);

	
	
	
	
	
	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьОбъектыДляВыгрузки(Узел) Экспорт
	Возврат Неопределено;
КонецФункции

Функция getRoutingKey() Экспорт
	Возврат "doc";
КонецФункции




