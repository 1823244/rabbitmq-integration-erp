#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Документ_ОтчетОРозничныхПродажах");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Документ_ОтчетОРозничныхПродажах");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Документ_ОтчетОРозничныхПродажах",
		"Форма_Плагин_RabbitMQ_экспорт_Документ_ОтчетОРозничныхПродажах",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Ссылка) Экспорт
	
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		Обк = Ссылка.ПолучитьОбъект(); 
	Иначе 
		Обк = Ссылка; 
	КонецЕсли;

	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	//	DEFINITION
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	//Таблица:	Шапка	
	
	definition.Вставить("Валюта", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Валюта));
	definition.Вставить("ВидЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ВидЦены));
	definition.Вставить("ВидыЗапасовУказаныВручную", Обк.ВидыЗапасовУказаныВручную);
	definition.Вставить("ГлавныйБухгалтер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГлавныйБухгалтер));
	definition.Вставить("ГруппаФинансовогоУчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГруппаФинансовогоУчета));
	definition.Вставить("ЕстьМаркируемаяПродукцияГИСМ", Обк.ЕстьМаркируемаяПродукцияГИСМ);
	definition.Вставить("ИдентификаторДокумента", Обк.ИдентификаторДокумента);
	definition.Вставить("КассаККМ", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.КассаККМ));
	definition.Вставить("КассоваяСмена", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.КассоваяСмена));
	definition.Вставить("Комментарий", Обк.Комментарий);
	definition.Вставить("Контрагент", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Контрагент));
	definition.Вставить("НалогообложениеНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НалогообложениеНДС));
	definition.Вставить("НаправлениеДеятельности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НаправлениеДеятельности));
	definition.Вставить("Организация", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Организация));
	definition.Вставить("ОрганизацияЕГАИС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ОрганизацияЕГАИС));
	definition.Вставить("Ответственный", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ответственный));
	definition.Вставить("Подразделение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Подразделение));
	definition.Вставить("ПоРезультатамИнвентаризации", Обк.ПоРезультатамИнвентаризации);
	definition.Вставить("ПорядокРасчетов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ПорядокРасчетов));
	definition.Вставить("Руководитель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Руководитель));
	definition.Вставить("Склад", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Склад));
	definition.Вставить("СуммаДокумента", Обк.СуммаДокумента);
	definition.Вставить("ФормаОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ФормаОплаты));
	definition.Вставить("ЦенаВключаетНДС", Обк.ЦенаВключаетНДС);


	// Таблица: ТОВАРЫ
	
	ТЧТовары = Новый Массив;
	
	Для сч = 0 По обк.товары.Количество()-1 Цикл
		
		стрк = обк.товары[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("АналитикаУчетаНаборов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.АналитикаУчетаНаборов));
		НовСтр.Вставить("АналитикаУчетаНоменклатуры", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.АналитикаУчетаНоменклатуры));
		НовСтр.Вставить("ДокументРеализации", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ДокументРеализации));
		НовСтр.Вставить("ИдентификаторСтроки", стрк.ИдентификаторСтроки);
		НовСтр.Вставить("Количество", стрк.Количество);
		НовСтр.Вставить("КоличествоУпаковок", стрк.КоличествоУпаковок);
		НовСтр.Вставить("КоличествоУпаковокУчет", стрк.КоличествоУпаковокУчет);
		НовСтр.Вставить("КоличествоУпаковокФакт", стрк.КоличествоУпаковокФакт);
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("НоменклатураНабора", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.НоменклатураНабора));
		НовСтр.Вставить("Партнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Партнер));
		НовСтр.Вставить("Помещение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Помещение));
		НовСтр.Вставить("ПоЧекуКоррекции", стрк.ПоЧекуКоррекции);
		НовСтр.Вставить("Продавец", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Продавец));
		НовСтр.Вставить("ПроцентРучнойСкидки", стрк.ПроцентРучнойСкидки);
		НовСтр.Вставить("Серия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Серия));
		НовСтр.Вставить("СтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СтавкаНДС));
		НовСтр.Вставить("СтатусУказанияСерий", стрк.СтатусУказанияСерий);
		НовСтр.Вставить("Сумма", стрк.Сумма);
		НовСтр.Вставить("СуммаНДС", стрк.СуммаНДС);
		НовСтр.Вставить("СуммаРучнойСкидки", стрк.СуммаРучнойСкидки);
		НовСтр.Вставить("УдалитьСтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УдалитьСтавкаНДС));
		НовСтр.Вставить("Упаковка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Упаковка));
		НовСтр.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика));
		НовСтр.Вставить("ХарактеристикаНабора", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ХарактеристикаНабора));
		НовСтр.Вставить("Цена", стрк.Цена);


		ТЧТовары.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧТовары", ТЧТовары);

	
	//Таблица:	ВидыЗапасов	
	
	ТЧВидыЗапасов = Новый Массив;
	
	Для сч = 0 По обк.видыЗапасов.Количество()-1 Цикл
		
		стрк = обк.видыЗапасов[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("АналитикаУчетаНаборов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.АналитикаУчетаНаборов));
		НовСтр.Вставить("АналитикаУчетаНоменклатуры", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.АналитикаУчетаНоменклатуры));
		НовСтр.Вставить("ВидЗапасов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидЗапасов));
		НовСтр.Вставить("ДокументРеализации", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ДокументРеализации));
		НовСтр.Вставить("ИдентификаторСтроки", стрк.ИдентификаторСтроки);
		НовСтр.Вставить("Количество", стрк.Количество);
		НовСтр.Вставить("КоличествоПоРНПТ", стрк.КоличествоПоРНПТ);
		НовСтр.Вставить("НомерГТД", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.НомерГТД));
		НовСтр.Вставить("Партнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Партнер));
		НовСтр.Вставить("ПоЧекуКоррекции", стрк.ПоЧекуКоррекции);
		НовСтр.Вставить("Продавец", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Продавец));
		НовСтр.Вставить("СтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СтавкаНДС));
		НовСтр.Вставить("СуммаНДС", стрк.СуммаНДС);
		НовСтр.Вставить("СуммаРучнойСкидки", стрк.СуммаРучнойСкидки);
		НовСтр.Вставить("СуммаСНДС", стрк.СуммаСНДС);
		НовСтр.Вставить("УдалитьСтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УдалитьСтавкаНДС));

				
		ТЧВидыЗапасов.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧВидыЗапасов", ТЧВидыЗапасов);


	 	

	//Таблица:	Серии	
	
	ТЧСерии = Новый Массив;
	
	Для сч = 0 По обк.Серии.Количество()-1 Цикл
		
		стрк = обк.Серии[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("Количество", стрк.Количество);
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("Помещение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Помещение));
		НовСтр.Вставить("Серия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Серия));
		НовСтр.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика));
				
		ТЧСерии.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧСерии", ТЧСерии);
	
 	//Таблица:	АкцизныеМарки	
	
	ТЧАкцизныеМарки = Новый Массив;
	
	Для сч = 0 По обк.АкцизныеМарки.Количество()-1 Цикл
		
		стрк = обк.АкцизныеМарки[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("АкцизнаяМарка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.АкцизнаяМарка));
		НовСтр.Вставить("Справка2", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Справка2));
				
		ТЧАкцизныеМарки.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧАкцизныеМарки", ТЧАкцизныеМарки);

	
	
	

	
	//Таблица:	ОплатаПлатежнымиКартами
	
	ТЧОплатаПлатежнымиКартами = Новый Массив;
	
	Для сч = 0 По обк.ОплатаПлатежнымиКартами.Количество()-1 Цикл
		
		стрк = обк.ОплатаПлатежнымиКартами[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("ВидОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидОплаты));
		НовСтр.Вставить("ДоговорПодключения", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ДоговорПодключения));
		НовСтр.Вставить("ИдентификаторСтроки", стрк.ИдентификаторСтроки);
		НовСтр.Вставить("КодАвторизации", стрк.КодАвторизации);
		НовСтр.Вставить("НомерПлатежнойКарты", стрк.НомерПлатежнойКарты);
		НовСтр.Вставить("Сумма", стрк.Сумма);
		НовСтр.Вставить("ЭквайринговыйТерминал", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ЭквайринговыйТерминал));

		ТЧОплатаПлатежнымиКартами.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧОплатаПлатежнымиКартами", ТЧОплатаПлатежнымиКартами);

	
	//Таблица:	ПодарочныеСертификаты 
	
	ТЧПодарочныеСертификаты = Новый Массив;
	
	Для сч = 0 По обк.ПодарочныеСертификаты.Количество()-1 Цикл
		
		стрк = обк.ПодарочныеСертификаты[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("ИдентификаторСтроки", стрк.ИдентификаторСтроки);
		НовСтр.Вставить("ОбъектРасчетов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ОбъектРасчетов));
		НовСтр.Вставить("ПодарочныйСертификат", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ПодарочныйСертификат));
		НовСтр.Вставить("Сумма", стрк.Сумма);
		НовСтр.Вставить("СуммаВВалютеСертификата", стрк.СуммаВВалютеСертификата);
		НовСтр.Вставить("СуммаВзаиморасчетов", стрк.СуммаВзаиморасчетов);

		ТЧПодарочныеСертификаты.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧПодарочныеСертификаты", ТЧПодарочныеСертификаты);

	
	//Таблица:	НачислениеБонусныхБаллов
	
	ТЧНачислениеБонусныхБаллов = Новый Массив;
	
	Для сч = 0 По обк.НачислениеБонусныхБаллов.Количество()-1 Цикл
		
		стрк = обк.НачислениеБонусныхБаллов[сч];
		
		НовСтр = Новый Структура;   
				
		НовСтр.Вставить("БонуснаяПрограммаЛояльности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.БонуснаяПрограммаЛояльности));
		НовСтр.Вставить("ДатаНачисления", стрк.ДатаНачисления);
		НовСтр.Вставить("ДатаСписания", стрк.ДатаСписания);
		НовСтр.Вставить("Партнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Партнер));
		НовСтр.Вставить("СуммаБонусныхБаллов", стрк.СуммаБонусныхБаллов);
		
		ТЧНачислениеБонусныхБаллов.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧНачислениеБонусныхБаллов", ТЧНачислениеБонусныхБаллов);
	

	//Таблица:	ОплатаБонуснымиБаллами
	
	ТЧОплатаБонуснымиБаллами = Новый Массив;
	
	Для сч = 0 По обк.ОплатаБонуснымиБаллами.Количество()-1 Цикл
		
		стрк = обк.ОплатаБонуснымиБаллами[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("БонуснаяПрограммаЛояльности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.БонуснаяПрограммаЛояльности));
		НовСтр.Вставить("ДатаОплаты", стрк.ДатаОплаты);
		НовСтр.Вставить("Партнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Партнер));
		НовСтр.Вставить("СуммаБонусныхБаллов", стрк.СуммаБонусныхБаллов);
		
		
		ТЧОплатаБонуснымиБаллами.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧОплатаБонуснымиБаллами", ТЧОплатаБонуснымиБаллами);
	
	
	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьОбъектыДляВыгрузки(Узел) Экспорт
	Возврат Неопределено;
КонецФункции

Функция getRoutingKey() Экспорт
	Возврат "doc";
КонецФункции




