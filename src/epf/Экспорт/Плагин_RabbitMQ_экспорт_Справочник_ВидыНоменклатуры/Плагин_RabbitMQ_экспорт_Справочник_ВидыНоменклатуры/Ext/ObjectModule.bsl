#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.2");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры",
		"Форма_Плагин_RabbitMQ_экспорт_Справочник_ВидыНоменклатуры",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(ЭлементСпр) Экспорт
	Если ТипЗнч(ЭлементСпр) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		Обк = ЭлементСпр.ПолучитьОбъект(); 
	Иначе 
		Обк = ЭлементСпр; 
	КонецЕсли;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	//	DEFINITION          
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	definition.Вставить("АвтоматическиГенерироватьСерии", обк.АвтоматическиГенерироватьСерии);
	definition.Вставить("АлкогольнаяПродукция", обк.АлкогольнаяПродукция);
	definition.Вставить("ВариантОформленияПродажи", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВариантОформленияПродажи));
	definition.Вставить("ВариантПредставленияНабораВПечатныхФормах", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВариантПредставленияНабораВПечатныхФормах));
	definition.Вставить("ВариантРасчетаЦеныНабора", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВариантРасчетаЦеныНабора));
	definition.Вставить("ВестиУчетПоГТД", обк.ВестиУчетПоГТД);
	definition.Вставить("ВестиУчетСертификатовНоменклатуры", обк.ВестиУчетСертификатовНоменклатуры);
	definition.Вставить("ВидАлкогольнойПродукции", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВидАлкогольнойПродукции));
	definition.Вставить("ВладелецСерий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВладелецСерий));
	definition.Вставить("ВладелецТоварныхКатегорий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВладелецТоварныхКатегорий));
	definition.Вставить("ВладелецХарактеристик", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ВладелецХарактеристик));
	definition.Вставить("ГруппаАналитическогоУчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ГруппаАналитическогоУчета));
	definition.Вставить("ГруппаДоступа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ГруппаДоступа));
	definition.Вставить("ГруппаФинансовогоУчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ГруппаФинансовогоУчета));
	definition.Вставить("ЕдиницаДляОтчетов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ЕдиницаДляОтчетов));
	definition.Вставить("ЕдиницаИзмерения", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ЕдиницаИзмерения));
	definition.Вставить("ЕдиницаИзмеренияСрокаГодности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ЕдиницаИзмеренияСрокаГодности));
	definition.Вставить("ЗапретРедактированияНаименованияДляПечатиНоменклатуры", обк.ЗапретРедактированияНаименованияДляПечатиНоменклатуры);
	definition.Вставить("ЗапретРедактированияНаименованияДляПечатиХарактеристики", обк.ЗапретРедактированияНаименованияДляПечатиХарактеристики);
	definition.Вставить("ЗапретРедактированияРабочегоНаименованияНоменклатуры", обк.ЗапретРедактированияРабочегоНаименованияНоменклатуры);
	definition.Вставить("ЗапретРедактированияРабочегоНаименованияХарактеристики", обк.ЗапретРедактированияРабочегоНаименованияХарактеристики);
	definition.Вставить("ИмпортнаяАлкогольнаяПродукция", обк.ИмпортнаяАлкогольнаяПродукция);
	definition.Вставить("ИспользованиеХарактеристик", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ИспользованиеХарактеристик));
	definition.Вставить("ИспользоватьRFIDМеткиСерии", обк.ИспользоватьRFIDМеткиСерии);
	definition.Вставить("ИспользоватьДатуПроизводстваСерии", обк.ИспользоватьДатуПроизводстваСерии);
	definition.Вставить("ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии", обк.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии);
	definition.Вставить("ИспользоватьИдентификаторПартииВЕТИССерии", обк.ИспользоватьИдентификаторПартииВЕТИССерии);
	definition.Вставить("ИспользоватьИндивидуальноеНаименованиеПриПечати", обк.ИспользоватьИндивидуальноеНаименованиеПриПечати);
	definition.Вставить("ИспользоватьКоличествоСерии", обк.ИспользоватьКоличествоСерии);
	definition.Вставить("ИспользоватьМРЦМОТПСерии", обк.ИспользоватьМРЦМОТПСерии);
	definition.Вставить("ИспользоватьНомерКИЗГИСМСерии", обк.ИспользоватьНомерКИЗГИСМСерии);
	definition.Вставить("ИспользоватьНомерСерии", обк.ИспользоватьНомерСерии);
	definition.Вставить("ИспользоватьПроизводителяВЕТИССерии", обк.ИспользоватьПроизводителяВЕТИССерии);
	definition.Вставить("ИспользоватьПроизводителяЕГАИССерии", обк.ИспользоватьПроизводителяЕГАИССерии);
	definition.Вставить("ИспользоватьСерии", обк.ИспользоватьСерии);
	definition.Вставить("ИспользоватьСправку2ЕГАИССерии", обк.ИспользоватьСправку2ЕГАИССерии);
	definition.Вставить("ИспользоватьСрокГодностиСерии", обк.ИспользоватьСрокГодностиСерии);
	definition.Вставить("ИспользоватьУпаковки", обк.ИспользоватьУпаковки);
	definition.Вставить("ИспользоватьХарактеристики", обк.ИспользоватьХарактеристики);
	definition.Вставить("КиЗГИСМ", обк.КиЗГИСМ);
	definition.Вставить("КодОКВЭД", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодОКВЭД));
	definition.Вставить("КодОКВЭД2", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодОКВЭД2));
	definition.Вставить("КодОКП", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодОКП));
	definition.Вставить("КодОКПД2", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодОКПД2));
	definition.Вставить("КодРаздел7ДекларацииНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодРаздел7ДекларацииНДС));
	definition.Вставить("КодТНВЭД", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.КодТНВЭД));
	definition.Вставить("КонтролироватьДублиНоменклатуры", обк.КонтролироватьДублиНоменклатуры);
	definition.Вставить("КонтролироватьДублиХарактеристик", обк.КонтролироватьДублиХарактеристик);
	definition.Вставить("НаборСвойств", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НаборСвойств));
	definition.Вставить("НаборСвойствСерий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НаборСвойствСерий));
	definition.Вставить("НаборСвойствХарактеристик", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НаборСвойствХарактеристик));
	definition.Вставить("НаборУпаковок", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НаборУпаковок));
	definition.Вставить("НастройкаИспользованияСерий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НастройкаИспользованияСерий));
	definition.Вставить("НастройкиКлючаЦенПоНоменклатуре", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НастройкиКлючаЦенПоНоменклатуре));
	definition.Вставить("НастройкиКлючаЦенПоСерии", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НастройкиКлючаЦенПоСерии));
	definition.Вставить("НастройкиКлючаЦенПоУпаковке", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НастройкиКлючаЦенПоУпаковке));
	definition.Вставить("НастройкиКлючаЦенПоХарактеристике", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НастройкиКлючаЦенПоХарактеристике));
	definition.Вставить("НастройкиСерийБерутсяИзДругогоВидаНоменклатуры", обк.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры);
	definition.Вставить("НоменклатураМногооборотнаяТара", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.НоменклатураМногооборотнаяТара));
	definition.Вставить("ОблагаетсяНДСУПокупателя", обк.ОблагаетсяНДСУПокупателя);
	definition.Вставить("ОбособленнаяЗакупкаПродажа", обк.ОбособленнаяЗакупкаПродажа);
	definition.Вставить("ОсобенностьУчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ОсобенностьУчета));
	definition.Вставить("ПодакцизныйТовар", обк.ПодакцизныйТовар);
	definition.Вставить("ПодконтрольнаяПродукцияВЕТИС", обк.ПодконтрольнаяПродукцияВЕТИС);
	definition.Вставить("ПолитикаУчетаСерий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ПолитикаУчетаСерий));
	definition.Вставить("ПоставляетсяВМногооборотнойТаре", обк.ПоставляетсяВМногооборотнойТаре);
	definition.Вставить("ПродукцияМаркируемаяДляГИСМ", обк.ПродукцияМаркируемаяДляГИСМ);
	definition.Вставить("СезоннаяГруппа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.СезоннаяГруппа));
	definition.Вставить("СкладскаяГруппа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.СкладскаяГруппа));
	definition.Вставить("СодержитДрагоценныеМатериалы", обк.СодержитДрагоценныеМатериалы);
	definition.Вставить("СпособОбеспеченияПотребностей", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.СпособОбеспеченияПотребностей));
	definition.Вставить("СтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.СтавкаНДС));
	definition.Вставить("СхемаОбеспечения", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.СхемаОбеспечения));
	definition.Вставить("ТипНоменклатуры", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ТипНоменклатуры));
	definition.Вставить("ТоварныеКатегорииОбщиеСДругимВидомНоменклатуры", обк.ТоварныеКатегорииОбщиеСДругимВидомНоменклатуры);
	definition.Вставить("ТочностьУказанияСрокаГодностиСерии", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ТочностьУказанияСрокаГодностиСерии));
	definition.Вставить("УдалитьЕстьОшибкиПереходаНаНовыйФорматФормул", обк.УдалитьЕстьОшибкиПереходаНаНовыйФорматФормул);
	definition.Вставить("УдалитьСтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.УдалитьСтавкаНДС));
	definition.Вставить("ХарактеристикаМногооборотнаяТара", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ХарактеристикаМногооборотнаяТара));
	definition.Вставить("ЦеноваяГруппа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ЦеноваяГруппа));
	definition.Вставить("ШаблонНаименованияДляПечатиКлючаЦен", обк.ШаблонНаименованияДляПечатиКлючаЦен);
	definition.Вставить("ШаблонНаименованияДляПечатиНоменклатуры", обк.ШаблонНаименованияДляПечатиНоменклатуры);
	definition.Вставить("ШаблонНаименованияДляПечатиНоменклатурыИсторияПереходаНаНовыеФормулы", обк.ШаблонНаименованияДляПечатиНоменклатурыИсторияПереходаНаНовыеФормулы);
	definition.Вставить("ШаблонНаименованияДляПечатиХарактеристики", обк.ШаблонНаименованияДляПечатиХарактеристики);
	definition.Вставить("ШаблонНаименованияДляПечатиХарактеристикиИсторияПереходаНаНовыеФормулы", обк.ШаблонНаименованияДляПечатиХарактеристикиИсторияПереходаНаНовыеФормулы);
	definition.Вставить("ШаблонРабочегоНаименованияКлючаЦен", обк.ШаблонРабочегоНаименованияКлючаЦен);
	definition.Вставить("ШаблонРабочегоНаименованияНоменклатуры", обк.ШаблонРабочегоНаименованияНоменклатуры);
	definition.Вставить("ШаблонРабочегоНаименованияНоменклатурыИсторияПереходаНаНовыеФормулы", обк.ШаблонРабочегоНаименованияНоменклатурыИсторияПереходаНаНовыеФормулы);
	definition.Вставить("ШаблонРабочегоНаименованияСерии", обк.ШаблонРабочегоНаименованияСерии);
	definition.Вставить("ШаблонРабочегоНаименованияСерииИсторияПереходаНаНовыеФормулы", обк.ШаблонРабочегоНаименованияСерииИсторияПереходаНаНовыеФормулы);
	definition.Вставить("ШаблонРабочегоНаименованияХарактеристики", обк.ШаблонРабочегоНаименованияХарактеристики);
	definition.Вставить("ШаблонРабочегоНаименованияХарактеристикиИсторияПереходаНаНовыеФормулы", обк.ШаблонРабочегоНаименованияХарактеристикиИсторияПереходаНаНовыеФормулы);
	definition.Вставить("ШаблонЦенника", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ШаблонЦенника));
	definition.Вставить("ШаблонЭтикетки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ШаблонЭтикетки));
	definition.Вставить("ШаблонЭтикеткиСерии", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(обк.ШаблонЭтикеткиСерии));

	//------------------------------------------------------     ТЧ РеквизитыДляКонтроляНоменклатуры

	ТЧРеквизитыДляКонтроляНоменклатуры = Новый Массив;

	Для сч = 0 По обк.РеквизитыДляКонтроляНоменклатуры.Количество()-1 Цикл

		стрк = обк.РеквизитыДляКонтроляНоменклатуры[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДоступностьЗаполнятьОбязательно", стрк.ДоступностьЗаполнятьОбязательно);
		НовСтр.Вставить("ДоступностьОтображатьПриСоздании", стрк.ДоступностьОтображатьПриСоздании);
		НовСтр.Вставить("ДоступностьУникален", стрк.ДоступностьУникален);
		НовСтр.Вставить("ЗаполнятьОбязательно", стрк.ЗаполнятьОбязательно);
		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("ОтборПриВыборе", стрк.ОтборПриВыборе);
		НовСтр.Вставить("ОтображатьПриСоздании", стрк.ОтображатьПриСоздании);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("Уникален", стрк.Уникален);
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыДляКонтроляНоменклатуры.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыДляКонтроляНоменклатуры", ТЧРеквизитыДляКонтроляНоменклатуры);

	//------------------------------------------------------     ТЧ РеквизитыДляКонтроляХарактеристик

	ТЧРеквизитыДляКонтроляХарактеристик = Новый Массив;

	Для сч = 0 По обк.РеквизитыДляКонтроляХарактеристик.Количество()-1 Цикл

		стрк = обк.РеквизитыДляКонтроляХарактеристик[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДоступностьЗаполнятьОбязательно", стрк.ДоступностьЗаполнятьОбязательно);
		НовСтр.Вставить("ДоступностьОтображатьПриСоздании", стрк.ДоступностьОтображатьПриСоздании);
		НовСтр.Вставить("ДоступностьУникален", стрк.ДоступностьУникален);
		НовСтр.Вставить("ЗаполнятьОбязательно", стрк.ЗаполнятьОбязательно);
		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Использование", стрк.Использование);
		НовСтр.Вставить("ОтображатьПриСоздании", стрк.ОтображатьПриСоздании);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("Уникален", стрк.Уникален);
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыДляКонтроляХарактеристик.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыДляКонтроляХарактеристик", ТЧРеквизитыДляКонтроляХарактеристик);

	//------------------------------------------------------     ТЧ РеквизитыДляКонтроляСерий

	ТЧРеквизитыДляКонтроляСерий = Новый Массив;

	Для сч = 0 По обк.РеквизитыДляКонтроляСерий.Количество()-1 Цикл

		стрк = обк.РеквизитыДляКонтроляСерий[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ДоступностьЗаполнятьОбязательно", стрк.ДоступностьЗаполнятьОбязательно);
		НовСтр.Вставить("ЗаполнятьОбязательно", стрк.ЗаполнятьОбязательно);
		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Использование", стрк.Использование);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыДляКонтроляСерий.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыДляКонтроляСерий", ТЧРеквизитыДляКонтроляСерий);

	//------------------------------------------------------     ТЧ РеквизитыБыстрогоОтбораНоменклатуры

	ТЧРеквизитыБыстрогоОтбораНоменклатуры = Новый Массив;

	Для сч = 0 По обк.РеквизитыБыстрогоОтбораНоменклатуры.Количество()-1 Цикл

		стрк = обк.РеквизитыБыстрогоОтбораНоменклатуры[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Используется", стрк.Используется);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыБыстрогоОтбораНоменклатуры.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыБыстрогоОтбораНоменклатуры", ТЧРеквизитыБыстрогоОтбораНоменклатуры);

	//------------------------------------------------------     ТЧ РеквизитыБыстрогоОтбораХарактеристик

	ТЧРеквизитыБыстрогоОтбораХарактеристик = Новый Массив;

	Для сч = 0 По обк.РеквизитыБыстрогоОтбораХарактеристик.Количество()-1 Цикл

		стрк = обк.РеквизитыБыстрогоОтбораХарактеристик[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Используется", стрк.Используется);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыБыстрогоОтбораХарактеристик.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыБыстрогоОтбораХарактеристик", ТЧРеквизитыБыстрогоОтбораХарактеристик);

	//------------------------------------------------------     ТЧ ПолитикиУчетаСерий

	ТЧПолитикиУчетаСерий = Новый Массив;

	Для сч = 0 По обк.ПолитикиУчетаСерий.Количество()-1 Цикл

		стрк = обк.ПолитикиУчетаСерий[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ПолитикаУчетаСерий", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ПолитикаУчетаСерий));
		НовСтр.Вставить("Склад", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Склад));
		ТЧПолитикиУчетаСерий.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧПолитикиУчетаСерий", ТЧПолитикиУчетаСерий);

	//------------------------------------------------------     ТЧ РеквизитыХарактеристикДляКлючаЦен

	ТЧРеквизитыХарактеристикДляКлючаЦен = Новый Массив;

	Для сч = 0 По обк.РеквизитыХарактеристикДляКлючаЦен.Количество()-1 Цикл

		стрк = обк.РеквизитыХарактеристикДляКлючаЦен[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Используется", стрк.Используется);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыХарактеристикДляКлючаЦен.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыХарактеристикДляКлючаЦен", ТЧРеквизитыХарактеристикДляКлючаЦен);

	//------------------------------------------------------     ТЧ РеквизитыСерийДляКлючаЦен

	ТЧРеквизитыСерийДляКлючаЦен = Новый Массив;

	Для сч = 0 По обк.РеквизитыСерийДляКлючаЦен.Количество()-1 Цикл

		стрк = обк.РеквизитыСерийДляКлючаЦен[сч];

		НовСтр = Новый Структура;

		НовСтр.Вставить("ИмяРеквизита", стрк.ИмяРеквизита);
		НовСтр.Вставить("Используется", стрк.Используется);
		НовСтр.Вставить("ПредставлениеРеквизита", стрк.ПредставлениеРеквизита);
		НовСтр.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство));
		НовСтр.Вставить("ЭтоДопРеквизит", стрк.ЭтоДопРеквизит);
		ТЧРеквизитыСерийДляКлючаЦен.Добавить(НовСтр);

	КонецЦикла;

	definition.Вставить("ТЧРеквизитыСерийДляКлючаЦен", ТЧРеквизитыСерийДляКлючаЦен);




	//------------------------------------------------------ ФИНАЛ


	СтруктураОбъекта.Вставить("definition", definition);
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	Возврат json;
КонецФункции

