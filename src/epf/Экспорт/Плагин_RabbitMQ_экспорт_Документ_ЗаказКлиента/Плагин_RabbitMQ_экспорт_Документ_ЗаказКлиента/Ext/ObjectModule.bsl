#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Документ_ЗаказКлиента");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Документ_ЗаказКлиента");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Документ_ЗаказКлиента",
		"Форма_Плагин_RabbitMQ_экспорт_Документ_ЗаказКлиента",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Ссылка) Экспорт
	
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Обк = Ссылка.ПолучитьОбъект(); 
	Иначе 
		Обк = Ссылка; 
	КонецЕсли;

	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	//	DEFINITION
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	//Таблица:	Шапка	
	//		
	//		
	//Реквизит	Тип	Вид
	//Автор	Справочник	ВнешниеПользователи
	definition.Вставить("Автор", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Автор)); 	

	//АдресДоставки	Строка	
	definition.Вставить("АдресДоставки", обк.АдресДоставки);
	//АдресДоставкиЗначение	Строка
	definition.Вставить("АдресДоставкиЗначение", обк.АдресДоставкиЗначение);
	//АдресДоставкиЗначенияПолей	Строка
	definition.Вставить("АдресДоставкиЗначенияПолей", обк.АдресДоставкиЗначенияПолей);
	//АдресДоставкиПеревозчика	Строка
	definition.Вставить("АдресДоставкиПеревозчика", обк.АдресДоставкиПеревозчика);
	//АдресДоставкиПеревозчикаЗначение	Строка
	definition.Вставить("АдресДоставкиПеревозчикаЗначение", обк.АдресДоставкиПеревозчикаЗначение);
	//АдресДоставкиПеревозчикаЗначенияПолей	Строка	
	definition.Вставить("АдресДоставкиПеревозчикаЗначенияПолей", обк.АдресДоставкиПеревозчикаЗначенияПолей);
	
	//БанковскийСчет	Справочник	БанковскиеСчетаОрганизаций
	definition.Вставить("БанковскийСчет", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.БанковскийСчет)); 	
	
	//БанковскийСчетГрузоотправителя	Справочник	БанковскиеСчетаКонтрагентов
	definition.Вставить("БанковскийСчетГрузоотправителя", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.БанковскийСчетГрузоотправителя)); 	
	
	//БанковскийСчетГрузополучателя	Справочник	БанковскиеСчетаКонтрагентов
	definition.Вставить("БанковскийСчетГрузополучателя", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.БанковскийСчетГрузополучателя)); 	
	
	//БанковскийСчетКонтрагента	Справочник	БанковскиеСчетаКонтрагентов
	definition.Вставить("БанковскийСчетКонтрагента", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.БанковскийСчетКонтрагента)); 	
	
	//Валюта	Справочник	Валюты
	definition.Вставить("Валюта", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Валюта)); 	
	
	//ВернутьМногооборотнуюТару	Булево	
	definition.Вставить("ВернутьМногооборотнуюТару", Обк.ВернутьМногооборотнуюТару); 	
	//ВремяДоставкиПо	Дата	
	definition.Вставить("ВремяДоставкиПо", xmlСтрока(Обк.ВремяДоставкиПо)); 	
	//ВремяДоставкиС	Дата
	definition.Вставить("ВремяДоставкиС", xmlСтрока(Обк.ВремяДоставкиС)); 	
	//ГлавныйБухгалтер	Справочник	ОтветственныеЛицаОрганизаций
	definition.Вставить("ГлавныйБухгалтер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГлавныйБухгалтер)); 	
	//ГрафикОплаты	Справочник	ГрафикиОплаты  
	definition.Вставить("ГрафикОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГрафикОплаты)); 	
	//Грузоотправитель	Справочник	Контрагенты
	definition.Вставить("Грузоотправитель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Грузоотправитель)); 	
	//Грузополучатель	Справочник	Контрагенты
	definition.Вставить("Грузополучатель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Грузополучатель)); 	
	//ГруппаФинансовогоУчета	Справочник	ГруппыФинансовогоУчетаРасчетов
	definition.Вставить("ГруппаФинансовогоУчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ГруппаФинансовогоУчета)); 	
	//ДатаОтгрузки	Дата	
	definition.Вставить("ДатаОтгрузки", xmlСтрока(Обк.ДатаОтгрузки)); 	
	//ДатаПоДаннымКлиента	Дата	
	definition.Вставить("ДатаПоДаннымКлиента", xmlСтрока(Обк.ДатаПоДаннымКлиента)); 	
	//ДатаСогласования	Дата	
	definition.Вставить("ДатаСогласования", xmlСтрока(Обк.ДатаСогласования)); 	
	//Договор	Справочник	ДоговорыКонтрагентов
	definition.Вставить("Договор", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Договор)); 	
	//ДокументОснование	Документ	КоммерческоеПредложениеКлиенту
	definition.Вставить("ДокументОснование", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ДокументОснование)); 	
	//ДополнительнаяИнформация	Строка	
	definition.Вставить("ДополнительнаяИнформация", Обк.ДополнительнаяИнформация); 	
	//ДополнительнаяИнформацияПоДоставке	Строка	
	definition.Вставить("ДополнительнаяИнформацияПоДоставке", Обк.ДополнительнаяИнформацияПоДоставке); 	
	//ЗонаДоставки	Справочник	ЗоныДоставки
	definition.Вставить("ЗонаДоставки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ЗонаДоставки)); 	
	//ИдентификаторПлатежа	Строка	
	definition.Вставить("ИдентификаторПлатежа", Обк.ИдентификаторПлатежа); 	
	
	//КартаЛояльности	Справочник	КартыЛояльности	
	definition.Вставить("КартаЛояльности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.КартаЛояльности)); 	
	
	//Касса	Справочник	Кассы
	definition.Вставить("Касса", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Касса)); 	
	//Комментарий	Строка
	definition.Вставить("Комментарий", Обк.Комментарий); 	
	//КонтактноеЛицо	Справочник	КонтактныеЛицаПартнеров
	definition.Вставить("КонтактноеЛицо", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.КонтактноеЛицо)); 	
	//Контрагент	Справочник	Контрагенты
	definition.Вставить("Контрагент", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Контрагент)); 	
	//Курьер	Справочник	ФизическиеЛица
	definition.Вставить("Курьер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Курьер)); 	
	//МаксимальныйКодСтроки	Число	
	definition.Вставить("МаксимальныйКодСтроки", Обк.МаксимальныйКодСтроки); 		
	//Менеджер	Справочник	Пользователи
	definition.Вставить("Менеджер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Менеджер)); 	
	//Назначение	Справочник	Назначения
	definition.Вставить("Назначение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Назначение)); 	
	//НазначениеПлатежа	Строка	
	definition.Вставить("НазначениеПлатежа", Обк.НазначениеПлатежа); 		
	//НалогообложениеНДС	Перечисление	ТипыНалогообложенияНДС
	definition.Вставить("НалогообложениеНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НалогообложениеНДС)); 	
	//НаправлениеДеятельности	Справочник	НаправленияДеятельности
	definition.Вставить("НаправлениеДеятельности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.НаправлениеДеятельности)); 	
	//НеОтгружатьЧастями	Булево	
	definition.Вставить("НеОтгружатьЧастями", Обк.НеОтгружатьЧастями); 		
	//НомерПоДаннымКлиента	Строка	
	definition.Вставить("НомерПоДаннымКлиента", Обк.НомерПоДаннымКлиента); 		
	//ОбъектРасчетов	Справочник	ОбъектыРасчетов
	definition.Вставить("ОбъектРасчетов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ОбъектРасчетов)); 	
	//ОплатаВВалюте	Булево	
	definition.Вставить("ОплатаВВалюте", Обк.ОплатаВВалюте); 		
	//Организация	Справочник	Организации
	definition.Вставить("Организация", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Организация)); 	
	//ОсобыеУсловияПеревозки	Булево	
	definition.Вставить("ОсобыеУсловияПеревозки", Обк.ОсобыеУсловияПеревозки); 		
	//ОсобыеУсловияПеревозкиОписание	Строка	
	definition.Вставить("ОсобыеУсловияПеревозкиОписание", Обк.ОсобыеУсловияПеревозкиОписание); 		
	//Партнер	Справочник	Партнеры
	definition.Вставить("Партнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Партнер)); 	
	//ПеревозчикПартнер	Справочник	Партнеры
	definition.Вставить("ПеревозчикПартнер", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ПеревозчикПартнер)); 	
	//Подразделение	Справочник	СтруктураПредприятия
	definition.Вставить("Подразделение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Подразделение)); 	
	//ПорядокРасчетов	Перечисление	ПорядокРасчетов
	definition.Вставить("ПорядокРасчетов", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ПорядокРасчетов)); 	
	//Приоритет	Справочник	Приоритеты
	definition.Вставить("Приоритет", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Приоритет)); 	
	//Руководитель	Справочник	ОтветственныеЛицаОрганизаций
	definition.Вставить("Руководитель", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Руководитель)); 	
	//Сборщик	Справочник	ФизическиеЛица
	definition.Вставить("Сборщик", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Сборщик)); 	
	//Сделка	Справочник	СделкиСКлиентами
	definition.Вставить("Сделка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Сделка)); 	
	//СкидкиРассчитаны	Булево
	definition.Вставить("СкидкиРассчитаны", Обк.СкидкиРассчитаны); 		
	//Склад	Справочник	Склады 
	definition.Вставить("Склад", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Склад)); 	
	//Согласован	Булево	
	definition.Вставить("Согласован", Обк.Согласован); 		
	//Соглашение	Справочник	СоглашенияСКлиентами
	definition.Вставить("Соглашение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Соглашение)); 	
	//СостояниеЗаполненияМногооборотнойТары	Перечисление	СостоянияЗаполненияМногооборотнойТары
	definition.Вставить("СостояниеЗаполненияМногооборотнойТары", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СостояниеЗаполненияМногооборотнойТары)); 	
	//СпособДоставки	Перечисление	СпособыДоставки
	definition.Вставить("СпособДоставки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.СпособДоставки)); 	
	//СрокВозвратаМногооборотнойТары	Число	
	definition.Вставить("СрокВозвратаМногооборотнойТары", Обк.СрокВозвратаМногооборотнойТары); 		
	//Статус	Перечисление	СтатусыЗаказовКлиентов
	definition.Вставить("Статус", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Статус)); 	
	//СуммаАвансаДоОбеспечения	Число	
	definition.Вставить("СуммаАвансаДоОбеспечения", Обк.СуммаАвансаДоОбеспечения);
	//СуммаВозвратнойТары	Число	
	definition.Вставить("СуммаВозвратнойТары", Обк.СуммаВозвратнойТары);
	//СуммаДокумента	Число	
	definition.Вставить("СуммаДокумента", Обк.СуммаДокумента);
	//СуммаПредоплатыДоОтгрузки	Число	
	definition.Вставить("СуммаПредоплатыДоОтгрузки", Обк.СуммаПредоплатыДоОтгрузки);
	//ТребуетсяЗалогЗаТару	Булево	
	definition.Вставить("ТребуетсяЗалогЗаТару", Обк.ТребуетсяЗалогЗаТару);
	//УдалитьПорядокОплаты	Перечисление	УдалитьПорядокОплатыПоСоглашениям
	
	//ФормаОплаты	Перечисление	ФормыОплаты
	definition.Вставить("ФормаОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ФормаОплаты)); 	
	//ХозяйственнаяОперация	Перечисление	ХозяйственныеОперации
	definition.Вставить("ХозяйственнаяОперация", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ХозяйственнаяОперация)); 	
	//ЦенаВключаетНДС	Булево	
	definition.Вставить("ЦенаВключаетНДС", Обк.ЦенаВключаетНДС);
	//ЭтапГосконтрактаЕИС	Строка	         
	definition.Вставить("ЭтапГосконтрактаЕИС", Обк.ЭтапГосконтрактаЕИС);
	//ЭтоЗаказКакСчет	Булево
	definition.Вставить("ЭтоЗаказКакСчет", Обк.ЭтоЗаказКакСчет);

	// ТЧ ТОВАРЫ
	
	ТЧТовары = Новый Массив;
	
    Для сч = 0 По обк.товары.Количество()-1 Цикл
		
		стрк = обк.товары[сч];
		
		СтрокаТовары = Новый Структура;   
		
		
		//Реквизит	Тип	Вид
		//ВариантОбеспечения	Перечисление	ВариантыОбеспечения
		СтрокаТовары.Вставить("ВариантОбеспечения", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВариантОбеспечения)); 	
		//ВариантОбеспеченияДоИзмененияОбновлениемИБ	Перечисление	ВариантыОбеспечения
		СтрокаТовары.Вставить("ВариантОбеспеченияДоИзмененияОбновлениемИБ", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВариантОбеспеченияДоИзмененияОбновлениемИБ)); 	
		//ВидЦены	Справочник	ВидыЦен
		СтрокаТовары.Вставить("ВидЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидЦены)); 	
		//ДатаОтгрузки	Дата
		СтрокаТовары.Вставить("ДатаОтгрузки", XMLСтрока(стрк.ДатаОтгрузки)); 	
		//ИдентификаторСтроки	Строка	
		СтрокаТовары.Вставить("ИдентификаторСтроки", стрк.ИдентификаторСтроки); 	
		//КлючСвязи	Число	
		СтрокаТовары.Вставить("КлючСвязи", стрк.КлючСвязи); 	
		//КодСтроки	Число	
		СтрокаТовары.Вставить("КодСтроки", стрк.КодСтроки); 	
		//Количество	Число	
		СтрокаТовары.Вставить("Количество", стрк.Количество); 	
		//КоличествоУпаковок	Число	
		СтрокаТовары.Вставить("КоличествоУпаковок", стрк.КоличествоУпаковок); 	
		//Номенклатура	Справочник	Номенклатура
		СтрокаТовары.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура)); 	
		//НоменклатураНабора	Справочник	Номенклатура
		СтрокаТовары.Вставить("НоменклатураНабора", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.НоменклатураНабора)); 	
		//НоменклатураПартнера	Справочник	НоменклатураКонтрагентов
		СтрокаТовары.Вставить("НоменклатураПартнера", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.НоменклатураПартнера)); 	
		//Обособленно	Булево	
		СтрокаТовары.Вставить("Обособленно", стрк.Обособленно); 	
		//Отменено	Булево	
		СтрокаТовары.Вставить("Отменено", стрк.Отменено); 	
		//Подразделение	Справочник	СтруктураПредприятия
		СтрокаТовары.Вставить("Подразделение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Подразделение)); 	
		//ПричинаОтмены	Справочник	ПричиныОтменыЗаказовКлиентов
		СтрокаТовары.Вставить("ПричинаОтмены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ПричинаОтмены)); 	
		//ПроцентАвтоматическойСкидки	Число
		СтрокаТовары.Вставить("ПроцентАвтоматическойСкидки", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ПроцентАвтоматическойСкидки)); 	
		//ПроцентРучнойСкидки	Число	
		СтрокаТовары.Вставить("ПроцентРучнойСкидки", стрк.ПроцентРучнойСкидки); 	
		//Серия	Справочник	СерииНоменклатуры
		СтрокаТовары.Вставить("Серия", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Серия)); 	
		//Склад	Справочник	Склады
		СтрокаТовары.Вставить("Склад", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Склад)); 	
		//Содержание	Строка
		СтрокаТовары.Вставить("Содержание", стрк.Содержание); 	
		//СрокПоставки	Число
		СтрокаТовары.Вставить("СрокПоставки", стрк.СрокПоставки); 	
		//СтавкаНДС	Справочник	СтавкиНДС
		СтрокаТовары.Вставить("СтавкаНДС", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СтавкаНДС)); 	
		//СтатусУказанияСерий	Число	
		СтрокаТовары.Вставить("СтатусУказанияСерий", стрк.СтатусУказанияСерий); 	
		//Сумма	Число
		СтрокаТовары.Вставить("Сумма", стрк.Сумма); 	
		//СуммаАвтоматическойСкидки	Число
		СтрокаТовары.Вставить("СуммаАвтоматическойСкидки", стрк.СуммаАвтоматическойСкидки); 	
		//СуммаБонусныхБалловКСписанию	Число
		СтрокаТовары.Вставить("СуммаБонусныхБалловКСписанию", стрк.СуммаБонусныхБалловКСписанию); 	
		//СуммаБонусныхБалловКСписаниюВВалюте	Число	
		СтрокаТовары.Вставить("СуммаБонусныхБалловКСписаниюВВалюте", стрк.СуммаБонусныхБалловКСписаниюВВалюте); 	
		//СуммаНачисленныхБонусныхБалловВВалюте	Число	
		СтрокаТовары.Вставить("СуммаНачисленныхБонусныхБалловВВалюте", стрк.СуммаНачисленныхБонусныхБалловВВалюте); 	
		//СуммаНДС	Число
		СтрокаТовары.Вставить("СуммаНДС", стрк.СуммаНДС); 	
		//СуммаРучнойСкидки	Число
		СтрокаТовары.Вставить("СуммаРучнойСкидки", стрк.СуммаРучнойСкидки); 	
		//СуммаСНДС	Число	
		СтрокаТовары.Вставить("СуммаСНДС", стрк.СуммаСНДС); 	
		//УдалитьСтавкаНДС	Перечисление	СтавкиНДС
		//Упаковка	Справочник	УпаковкиЕдиницыИзмерения
		СтрокаТовары.Вставить("Упаковка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Упаковка)); 	
		//Характеристика	Справочник	ХарактеристикиНоменклатуры
		СтрокаТовары.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика)); 	
		//ХарактеристикаНабора	Справочник	ХарактеристикиНоменклатуры
		СтрокаТовары.Вставить("ХарактеристикаНабора", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ХарактеристикаНабора)); 	
		//Цена	Число
		СтрокаТовары.Вставить("Цена", стрк.Цена); 	
		
		
		ТЧТовары.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧТовары", ТЧТовары);

	
	
	//Таблица:	ЭтапыГрафикаОплаты	
	
	ТЧЭтапыГрафикаОплаты = Новый Массив;
	
    Для сч = 0 По обк.ЭтапыГрафикаОплаты.Количество()-1 Цикл
		
		стрк = обк.ЭтапыГрафикаОплаты[сч];
		
		СтрокаТовары = Новый Структура;   
				
		//Реквизит	Тип	Вид
		//ВариантОплаты	Перечисление	ВариантыКонтроляОплатыКлиентом
		СтрокаТовары.Вставить("ВариантОплаты", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВариантОплаты)); 	
		//ВариантОтсчета	Перечисление	ВариантыОтсчетаДатыПлатежа
		СтрокаТовары.Вставить("ВариантОтсчета", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВариантОтсчета)); 	
		//ДатаПлатежа	Дата	
		СтрокаТовары.Вставить("ДатаПлатежа", XMLСтрока(стрк.ДатаПлатежа)); 	
		//ПроцентЗалогаЗаТару	Число
		СтрокаТовары.Вставить("ПроцентЗалогаЗаТару", стрк.ПроцентЗалогаЗаТару); 	
		//ПроцентПлатежа	Число	
		СтрокаТовары.Вставить("ПроцентПлатежа", стрк.ПроцентПлатежа); 	
		//Сдвиг	Число	
		СтрокаТовары.Вставить("Сдвиг", стрк.Сдвиг); 	
		//СуммаЗалогаЗаТару	Число
		СтрокаТовары.Вставить("СуммаЗалогаЗаТару", стрк.СуммаЗалогаЗаТару); 	
		//СуммаОтклоненияМерныхТоваров	Число	
		СтрокаТовары.Вставить("СуммаОтклоненияМерныхТоваров", стрк.СуммаОтклоненияМерныхТоваров); 	
		//СуммаПлатежа	Число	
		СтрокаТовары.Вставить("СуммаПлатежа", стрк.СуммаПлатежа); 	
			
		ТЧЭтапыГрафикаОплаты.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧЭтапыГрафикаОплаты", ТЧЭтапыГрафикаОплаты);

	
	//		
	//Таблица:	СкидкиНаценки	
	
	
	ТЧСкидкиНаценки = Новый Массив;
	
    Для сч = 0 По обк.СкидкиНаценки.Количество()-1 Цикл
		
		стрк = обк.СкидкиНаценки[сч];
		
		СтрокаТовары = Новый Структура;   
				
		//КлючСвязи	Число
		СтрокаТовары.Вставить("КлючСвязи", стрк.КлючСвязи); 	
		//НапомнитьПозже	Булево	
		СтрокаТовары.Вставить("НапомнитьПозже", стрк.НапомнитьПозже); 	
		//СкидкаНаценка	Справочник	СкидкиНаценки
		СтрокаТовары.Вставить("СкидкаНаценка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СкидкаНаценка)); 	
		//Сумма	Число	
		СтрокаТовары.Вставить("Сумма", стрк.Сумма); 		
			
		ТЧСкидкиНаценки.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧСкидкиНаценки", ТЧСкидкиНаценки);

	
	//Таблица:	НачислениеБонусныхБаллов	
	
	ТЧНачислениеБонусныхБаллов = Новый Массив;
	
    Для сч = 0 По обк.НачислениеБонусныхБаллов.Количество()-1 Цикл
		
		стрк = обк.НачислениеБонусныхБаллов[сч];
		
		СтрокаТовары = Новый Структура;   
				
		СтрокаТовары.Вставить("БонуснаяПрограммаЛояльности", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.БонуснаяПрограммаЛояльности)); 	
		СтрокаТовары.Вставить("ДатаНачисления", XMLСтрока(стрк.ДатаНачисления)); 	
		СтрокаТовары.Вставить("ДатаСписания", XMLСтрока(стрк.ДатаСписания)); 	
		СтрокаТовары.Вставить("КлючСвязи", стрк.КлючСвязи); 			
		СтрокаТовары.Вставить("СуммаБонусныхБаллов", стрк.СуммаБонусныхБаллов); 			
		
		ТЧНачислениеБонусныхБаллов.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧНачислениеБонусныхБаллов", ТЧНачислениеБонусныхБаллов);

	
	
	//Таблица:	ДополнительныеРеквизиты	
	//		
	

	ТЧДополнительныеРеквизиты = Новый Массив;
	
    Для сч = 0 По обк.ДополнительныеРеквизиты.Количество()-1 Цикл
		
		стрк = обк.ДополнительныеРеквизиты[сч];
		
		СтрокаТовары = Новый Структура;

		СтрокаТовары.Вставить("Значение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Значение)); 	
		СтрокаТовары.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство)); 	
		СтрокаТовары.Вставить("ТекстоваяСтрока", стрк.ТекстоваяСтрока); 	

		ТЧДополнительныеРеквизиты.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧДополнительныеРеквизиты", ТЧДополнительныеРеквизиты);


	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьОбъектыДляВыгрузки(Узел) Экспорт
	Возврат Неопределено;
КонецФункции

Функция getRoutingKey() Экспорт
	Возврат "doc";
КонецФункции

