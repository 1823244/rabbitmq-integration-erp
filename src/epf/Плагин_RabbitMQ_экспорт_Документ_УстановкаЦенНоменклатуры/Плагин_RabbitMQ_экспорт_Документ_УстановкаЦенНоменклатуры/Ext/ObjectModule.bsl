#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.1");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Плагин_RabbitMQ_экспорт_Документ_УстановкаЦенНоменклатуры");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Плагин_RabbitMQ_экспорт_Документ_УстановкаЦенНоменклатуры");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180");
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, 
		"Открыть форму : Плагин_RabbitMQ_экспорт_Документ_УстановкаЦенНоменклатуры",
		"Форма_Плагин_RabbitMQ_экспорт_Документ_УстановкаЦенНоменклатуры",
		ТипКоманды, 
		Ложь) ;
	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры


#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Номенклатура	- СправочникСсылка.Номенклатура / СправочникОбъект.Номенклатура - при чтении узла обмена сюда будут приходить именно объекты
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ВыгрузитьОбъект(Ссылка) Экспорт
	
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
		Обк = Ссылка.ПолучитьОбъект(); 
	Иначе 
		Обк = Ссылка; 
	КонецЕсли;

	
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ЗаписьJson = Новый ЗаписьJSON;
	ЗаписьJson.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	// Это основной объект json-сообщения
	СтруктураОбъекта = Новый Структура;
	
	СтруктураОбъекта.Вставить("source", "ERP");
	СтруктураОбъекта.Вставить("type", Обк.метаданные().ПолноеИмя());
	СтруктураОбъекта.Вставить("datetime", XMLСтрока(ТекущаяДатаСеанса()));
	
	identification = ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ссылка);
	СтруктураОбъекта.Вставить("identification", identification);
	
	//	DEFINITION
	
	definition = ксп_ЭкспортСлужебный.СоздатьУзелDefinition(Обк.Ссылка);
	
	//Таблица:	Шапка	
	
	
	definition.Вставить("ДокументОснование", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.ДокументОснование));
	definition.Вставить("Комментарий", Обк.Комментарий);
	definition.Вставить("МаркетинговоеМероприятие", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.МаркетинговоеМероприятие));
	definition.Вставить("Ответственный", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Ответственный));
	definition.Вставить("Согласован", Обк.Согласован);
	definition.Вставить("Статус", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(Обк.Статус));


	// Таблица: ТОВАРЫ
	
	ТЧТовары = Новый Массив;
	
	Для сч = 0 По обк.товары.Количество()-1 Цикл
		
		стрк = обк.товары[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("Валюта", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Валюта));
		НовСтр.Вставить("ВидЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидЦены));
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("Упаковка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Упаковка));
		НовСтр.Вставить("Формула", стрк.Формула);
		НовСтр.Вставить("Характеристика", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Характеристика));
		НовСтр.Вставить("Цена", стрк.Цена);
		НовСтр.Вставить("ЦенаИзмененаВручную", стрк.ЦенаИзмененаВручную);

		ТЧТовары.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧТовары", ТЧТовары);
	
	//Таблица:	ДополнительныеРеквизиты	

	ТЧДополнительныеРеквизиты = Новый Массив;
	
    Для сч = 0 По обк.ДополнительныеРеквизиты.Количество()-1 Цикл
		
		стрк = обк.ДополнительныеРеквизиты[сч];
		
		СтрокаТовары = Новый Структура;

		СтрокаТовары.Вставить("Значение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Значение)); 	
		СтрокаТовары.Вставить("Свойство", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Свойство)); 	
		СтрокаТовары.Вставить("ТекстоваяСтрока", стрк.ТекстоваяСтрока); 	

		ТЧДополнительныеРеквизиты.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧДополнительныеРеквизиты", ТЧДополнительныеРеквизиты);
	
	
	// Таблица: Товары2_5
	
	ТЧТовары = Новый Массив;
	
	Для сч = 0 По обк.Товары2_5.Количество()-1 Цикл
		
		стрк = обк.Товары2_5[сч];
		
		НовСтр = Новый Структура;   
		
		НовСтр.Вставить("Валюта", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Валюта));
		НовСтр.Вставить("ВидЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидЦены));
		НовСтр.Вставить("Номенклатура", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Номенклатура));
		НовСтр.Вставить("СерияЦО", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.СерияЦО));
		НовСтр.Вставить("Упаковка", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Упаковка));
		НовСтр.Вставить("УпаковкаЦО", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.УпаковкаЦО));
		НовСтр.Вставить("Формула", стрк.Формула);
		НовСтр.Вставить("ХарактеристикаЦО", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ХарактеристикаЦО));
		НовСтр.Вставить("Цена", стрк.Цена);
		НовСтр.Вставить("ЦенаИзмененаВручную", стрк.ЦенаИзмененаВручную);

		ТЧТовары.Добавить(НовСтр);
	КонецЦикла;
	
	definition.Вставить("ТЧТовары25", ТЧТовары);
	

	
	
	//Таблица:	ВидыЦен	

	ТЧВидыЦен = Новый Массив;
	
    Для сч = 0 По обк.ВидыЦен.Количество()-1 Цикл
		
		стрк = обк.ВидыЦен[сч];
		
		СтрокаТовары = Новый Структура;

		НовСтр.Вставить("ВидЦены", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ВидЦены));
		//НовСтр.Вставить("НастройкиКомпоновкиДанных", стрк.НастройкиКомпоновкиДанных);

		ТЧВидыЦен.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧВидыЦен", ТЧВидыЦен);
	
	
	//Таблица:	НаборыЗначенийДоступа	

	ТЧНаборыЗначенийДоступа = Новый Массив;
	
    Для сч = 0 По обк.НаборыЗначенийДоступа.Количество()-1 Цикл
		
		стрк = обк.НаборыЗначенийДоступа[сч];
		
		СтрокаТовары = Новый Структура;

		НовСтр.Вставить("ЗначениеДоступа", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.ЗначениеДоступа));
		НовСтр.Вставить("Изменение", стрк.Изменение);
		НовСтр.Вставить("НомерНабора", стрк.НомерНабора);
		НовСтр.Вставить("Уточнение", ксп_ЭкспортСлужебный.СоздатьУзелIdentification(стрк.Уточнение));
		НовСтр.Вставить("Чтение", стрк.Чтение);

		ТЧНаборыЗначенийДоступа.Добавить(СтрокаТовары);
	КонецЦикла;
	
	definition.Вставить("ТЧНаборыЗначенийДоступа", ТЧНаборыЗначенийДоступа);

	
	
	
	
	
	
	//------------------------------------------------------
	
	СтруктураОбъекта.Вставить("definition", definition);
	
	ЗаписатьJSON(ЗаписьJson, СтруктураОбъекта);
	json = ЗаписьJson.Закрыть();
	
	Возврат json;
	
	
	Возврат Неопределено;
	
КонецФункции




