// Возвращает сведения о внешней обработке
Функция СведенияОВнешнейОбработке() Экспорт
	
	Возврат СкидкиНаценкиСервер.ПараметрыРегистрацииВнешнейОбработкиУсловияПредоставленияСкидокНаценок(
		НСтр("ru = 'За предоплату'"),
		НСтр("ru = 'Условие выполняется, если клиент выполнил предоплату по заказу.'"));
	
КонецФункции

// Возвращает запрос для проверки условия предоставления (Проверка осуществляется запросом)
// Результат запроса - поле КратностьВыполнения, Число
//
// Параметры:
// Настройки - Структура - Настройки, заданные пользователем в форме настроек внешней обработки
//	ПараметрыРасчета - Структура - Параметры расчета скидок (наценок)
//
// Возвращаемое значение:
//	Запрос (обязательное поле: КратностьВыполнения, Число)
//	-1: Условие выполнено, но не влияет на результирующую кратность
//	0: Условие не выполнено
//	> 1: Условие выполнено, влияет на результирующую кратность
//
Функция Запрос(Настройки, ПараметрыРасчета) Экспорт
	
	Результат = Ложь;
	//Сообщить(ТипЗнч(ПараметрыРасчета.Регистратор));
	Если ТипЗнч(ПараметрыРасчета.Регистратор) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Если ТипЗнч(ПараметрыРасчета.Объект) = Тип("ДанныеФормыСтруктура") Тогда
			//Объект = ДанныеФормыВЗначение(ПараметрыРасчета.Объект, Тип("ДокументОбъект.ЗаказКлиента"));
			Если (Настройки.Свойство("Процент") И ЗначениеЗаполнено(ПараметрыРасчета.Регистратор))
				ИЛИ (ЗначениеЗаполнено(ПараметрыРасчета.Объект.КСП_ПроцентПредоплаты) И ЗначениеЗаполнено(ПараметрыРасчета.Объект.КСП_СуммаПредоплаты))
				Тогда
				//СуммаДокументаБезСкидокНаценок = ксп_СкидкиНаценкиСервер.ПолучитьСуммуДокументаБезСкидокНаценк(ПараметрыРасчета.Объект);
				СуммаДокументаБезСкидокНаценок = ПолучитьСуммуДокументаБезСкидокНаценк(ПараметрыРасчета.Регистратор);
				//Сообщить(СуммаДокументаБезСкидокНаценок);
				Если НЕ СуммаДокументаБезСкидокНаценок = 0 Тогда
					//Сообщить(Настройки.Процент);
					Если ПараметрыРасчета.Объект.КСП_Коллекция.КСП_ДатаПредоплаты_2 <> Дата('00010101')
							И НачалоДня(ПараметрыРасчета.Объект.КСП_Коллекция.КСП_ДатаПредоплаты_2) < НачалоДня(ТекущаяДатаСеанса()) Тогда
						Если Настройки.Процент <= ПараметрыРасчета.Объект.КСП_ПроцентПредоплаты Тогда
							Результат = Истина;
						КонецЕсли;
					Иначе
						Если Настройки.Процент <= ксп_СкидкиНаценкиСервер.СуммаОплатПоЗаказу(ПараметрыРасчета.Регистратор) / СуммаДокументаБезСкидокНаценок * 100 Тогда
							Результат = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;

		ИначеЕсли ТипЗнч(ПараметрыРасчета.Объект) = Тип("ДокументОбъект.ЗаказКлиента") Тогда
			Объект = ПараметрыРасчета.Объект;
			Если (Настройки.Свойство("Процент") И ЗначениеЗаполнено(ПараметрыРасчета.Регистратор))
				ИЛИ (ЗначениеЗаполнено(Объект.КСП_ПроцентПредоплаты) И ЗначениеЗаполнено(Объект.КСП_СуммаПредоплаты))
				Тогда
				//СуммаДокументаБезСкидокНаценок = ксп_СкидкиНаценкиСервер.ПолучитьСуммуДокументаБезСкидокНаценк(Объект);
				СуммаДокументаБезСкидокНаценок = ПолучитьСуммуДокументаБезСкидокНаценк(Объект);
								//Сообщить(СуммаДокументаБезСкидокНаценок);

				Если НЕ СуммаДокументаБезСкидокНаценок = 0 Тогда
					Если Объект.КСП_Коллекция.КСП_ДатаПредоплаты_2 <> Дата('00010101')
							И НачалоДня(Объект.КСП_Коллекция.КСП_ДатаПредоплаты_2) < НачалоДня(ТекущаяДатаСеанса()) Тогда
						Если Настройки.Процент <= Объект.КСП_ПроцентПредоплаты Тогда
							Результат = Истина;
						КонецЕсли;
					Иначе
						Если Настройки.Процент <= ксп_СкидкиНаценкиСервер.СуммаОплатПоЗаказу(ПараметрыРасчета.Регистратор) / СуммаДокументаБезСкидокНаценок * 100 Тогда
							Результат = Истина;
						Иначе
							Результат = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;

		Иначе
			Возврат 1;
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	-1 КАК КратностьВыполнения
		|ГДЕ
		|	&Условие = ИСТИНА");
		Запрос.УстановитьПараметр("Условие", Результат);
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	-1 КАК КратностьВыполнения
	|ГДЕ
	|	&Условие = ИСТИНА");
	Запрос.УстановитьПараметр("Условие", Результат);
	
	Возврат Запрос;
	
КонецФункции

// Выполняет проверку выполнения условия предоставления (Проверка осуществляется алгоритмически)
//
// Параметры:
//	Настройки - Структура - Настройки, заданные пользователем в форме настроек внешней обработки
//	ПараметрыРасчета - Структура - Параметры расчета скидок (наценок)
//
// Возвращаемое значение:
//	Число - Кратность выполнения условия
//	-1: Условие выполнено, но не влияет на результирующую кратность
//	0: Условие не выполнено
//	> 1: Условие выполнено, влияет на результирующую кратность
//
Функция ПроверитьУсловие(Настройки, ПараметрыРасчета) Экспорт
	
	Возврат -1;
	
КонецФункции

// Возвращает имя формы внешней обработки,
// предназначенной для настройки условия предоставления 
//
// Возвращаемое значение:
//	Строка - Имя формы
//
Функция ИмяФормыНастроек() Экспорт
	
	Возврат "Настройки";
	
КонецФункции

// Возвращает расширенное описание условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Настройки, заданные пользователем в форме настроек внешней обработки
//
// Возвращаемое значение:
//	Строка - Расширенное описание
//
Функция ОписаниеДействия(Настройки) Экспорт
	
	Попытка
		Если Настройки <> Неопределено И Настройки.Процент > 0 Тогда
			Описание = СтрШаблон("Условие выполняется при предоплате клиентом по заказу клиента: %1%%", Настройки.Процент);
		Иначе
			Описание = "Не заданы настройки условия предоставления";
		КонецЕсли;
	Исключение
		Описание = "Настройки не загружены.
		           |При загрузке настроек условия предоставления произошла ошибка:
		           |" + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Описание;
	
КонецФункции

// Возвращает заголовок условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Настройки, заданные пользователем в форме настроек внешней обработки
//
// Возвращаемое значение:
//	Строка - Наименование условия
//
Функция Автонаименование(Настройки) Экспорт
	
	Возврат НСтр("ru = 'За предоплату'");
	
КонецФункции

Функция ПолучитьСуммуДокументаБезСкидокНаценк(Знач Объект)
	
	СуммаДокументаБезСкидокНаценок = 0;

	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Товары.Цена КАК Цена,
			|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	Товары.Отменено КАК Отменено
			|ПОМЕСТИТЬ втТовары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(ВЫБОР
			|			КОГДА НЕ втТовары.Отменено
			|				ТОГДА втТовары.Цена * втТовары.КоличествоУпаковок
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК СуммаДокументаБезСкидокНаценок
			|ИЗ
			|	втТовары КАК втТовары";
		
		Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
		
		ВыборкаСкидок = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаСкидок.Следующий() Тогда
			СуммаДокументаБезСкидокНаценок = ВыборкаСкидок.СуммаДокументаБезСкидокНаценок
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СуммаДокументаБезСкидокНаценок;
	
КонецФункции
