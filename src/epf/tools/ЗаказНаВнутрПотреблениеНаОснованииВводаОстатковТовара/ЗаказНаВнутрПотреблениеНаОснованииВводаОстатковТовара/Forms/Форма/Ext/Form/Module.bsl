Перем ОбъектЗаполнения Экспорт;

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда 
		сообщить(ВладелецФормы);
         Объект.Документ = ВладелецФормы.Объект.Ссылка;
    КонецЕсли;
    ОбъектЗаполнения=Объект.Документ;
    ЗакрытиеФормы = Новый ОписаниеОповещения
    	("ЗаполнениеПоВыбраннымПараметрам", ЭтаФорма); // Название процедуры, которая будет выполняться после закрытия формы "ЗапросПараметров"
    ЗапросПараметров = ОткрытьФорму("ВнешняяОбработка.ЗаказНаВнутрПотреблениеНаОснованииВводаОстатковТовара.Форма.ЗапросПараметров"
		,,ОбъектЗаполнения,,,,ЗакрытиеФормы);
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнениеПоВыбраннымПараметрам(Результат, Параметры) Экспорт
    Если НЕ ЗначениеЗаполнено(Результат) Тогда
        Возврат; // Пользователь не стал указывать параметры, останавливаем работу
    КонецЕсли;
    ОбъектЗаполнения = ЗаполнениеНаСервере(ОбъектЗаполнения, Результат); // Результат содержит структуру, полученную из формы "ЗапросПараметров"
    Если НЕ ВладелецФормы=Неопределено Тогда
        ВладелецФормы.Прочитать(); // Если обработка вызывалась из документа, то нужно перечитать изменения, чтобы пользователь видел результат обработки
    КонецЕсли;
КонецПроцедуры
 
&НаСервере
функция ЗаполнениеНаСервере(ОбъектЗаполнения, Параметры = Неопределено)
    Если ЗначениеЗаполнено(Объект.Документ) Тогда // Проверяем режим запуска: Через Открыть или из документа
        Док = Объект.Документ.ПолучитьОбъект();
	Иначе 
		Док = ОбъектЗаполнения;
	КонецЕсли;
	
	ТипДокументаСлужебногоРезерва = Параметры.ТипДокументаСлужебногоРезерва;
	
	СоздатьДокументЗаказНаВнутреннееПотребление(док, ТипДокументаСлужебногоРезерва);

КонецФункции


&НаСервере
Процедура СоздатьРезервНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура СоздатьРезерв(Команда)
	СоздатьРезервНаСервере();
	ВыполнитьКоманду("", Объект.Документ);
КонецПроцедуры


&НаСервере
Процедура СоздатьДокументЗаказНаВнутреннееПотребление(ВводОстатковСсылкаОбъект, ТипДокументаСлужебногоРезерва)
	
	//ВводОстатковОбъект = ВводОстатковСсылка.ПолучитьОбъект();
	
	ОбъектДанных = Документы.ЗаказНаВнутреннееПотребление.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ОбъектДанных, ВводОстатковСсылкаОбъект, , "Номер,Дата");
	
	ОбъектДанных.Дата = ТекущаяДатаСеанса();
	
	ОбъектДанных.ПометкаУдаления = Ложь;
	
	//ОбъектДанных.Комментарий = деф.Number;
	//ОбъектДанных.Номер = деф.Number;
	
	ОбъектДанных.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	ОбъектДанных.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению; 

	ОбъектДанных.КСП_ТипДокументаСлужебногоРезерва = ТипДокументаСлужебногоРезерва;

	ОбъектДанных.Согласован = Истина; 

	ОбъектДанных.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");

	ОбъектДанных.Товары.Очистить();
	
	Для каждого строка из ВводОстатковСсылкаОбъект.Товары Цикл
		
		НоваяСтрока = ОбъектДанных.Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		//Если ЗаполненаСсылка(строка.Номенклатура) Тогда
		//	НоваяСтрока.Номенклатура = ПолучитьСсылкуСправочникаПоДаннымID(строка.Номенклатура, "Номенклатура");
		//КонецЕсли;
		//Если ЗаполненаСсылка(строка.Номенклатура) Тогда
		//	НоваяСтрока.Характеристика = ПолучитьСсылкуСправочникаПоДаннымID(строка.ХарактеристикаНоменклатуры, "ХарактеристикиНоменклатуры");
		//КонецЕсли;
		//
		//НоваяСтрока.Количество = строка.Количество; 
		//НоваяСтрока.КоличествоУпаковок = строка.Количество; 
		
		НоваяСтрока.ДатаОтгрузки = ОбъектДанных.Дата;
		
		НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.СоСклада;
		
		НоваяСтрока.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах;
	КонецЦикла; 
	
	ОбъектДанных.ОбменДанными.Загрузка = ложь;
	Успешно = Ложь;
	Попытка
		ОбъектДанных.Записать(РежимЗаписиДокумента.Проведение);
		Успешно = Истина;
	Исключение
		т = ОписаниеОшибки();
	    сообщить("Ошибка проведения документа Заказ на внутреннее потребление: "+т);
	КонецПопытки;
	
	Если не успешно Тогда
		ОбъектДанных.Записать(РежимЗаписиДокумента.запись);
	КонецЕсли;
	
	сообщить("Создан документ Заказ на внутреннее потребление: "+строка(ОбъектДанных));
	
КонецПроцедуры


