
#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.5");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Создание реализация по заказам клиентов");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Создание реализация по заказам клиентов");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.7.306"); // ОБЯЗАТЕЛЬНО!!! //(https://forum.infostart.ru/forum9/topic179193/)
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Открыть форму : Создание реализаций","ксп_СозданиеРеализацийПоЗаказамКлиентовИнтерактивно",ТипКоманды, Ложь) ;
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Выполнить создание реализаций","СоздатьРеализацииНаОснованииЗаказовКлиентов",ТипКоманды, Ложь) ;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры

// Интерфейс для запуска логики обработки.
Процедура ВыполнитьКоманду(ИмяКоманды, ПараметрыВыполнения) Экспорт
	
	Если ИмяКоманды = "СоздатьРеализацииНаОснованииЗаказовКлиентов" Тогда
		
		СоздатьРеализацииНаОснованииЗаказовКлиентов();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 	



// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура СоздатьРеализацииНаОснованииЗаказовКлиентов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рег.ЗаказКлиента КАК ЗаказКлиента,
		|	Рег.id КАК id,
		|	Рег.site КАК site
		|ИЗ
		|	РегистрСведений.crm_ИсходныеДанныеЗаказов КАК Рег
		|ГДЕ
		|	Рег.status В (&status)
		|	И (Рег.Реализация = Значение(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
		|	или Рег.Реализация = Неопределено 
		|	или Рег.Реализация = NULL)";
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить("complete");
	МассивСтатусов.Добавить("partially-completed");
	Запрос.УстановитьПараметр("status", МассивСтатусов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СоздатьОднуРеализацию(ВыборкаДетальныеЗаписи.ЗаказКлиента, ВыборкаДетальныеЗаписи.id, ВыборкаДетальныеЗаписи.site);
		
	КонецЦикла;
	

КонецПроцедуры



// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция СоздатьОднуРеализацию(ЗаказКлиентаСсылка, id, site) Экспорт
	
	Если Не ЗаказКлиентаСсылка.Проведен Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	докР = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	
	докР.Товары.Очистить();
	
	Попытка
		ЗаполнитьЗначенияСвойств(ДокР, ЗаказКлиентаСсылка,,"Номер");
		
		Для каждого стрк Из ЗаказКлиентаСсылка.Товары Цикл
			НовСтр = ДокР.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, стрк);
		КонецЦикла;
	Исключение
		т = ОписаниеОшибки();
		Сообщить("Не удалось заполнить: " + докР + " " + т, СтатусСообщения.Важное);
		ВызватьИсключение т;
	КонецПопытки;

	
	докР.Дата				= ТекущаяДата();
	
	докР.Статус 			= Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
	докР.ЗаказКлиента 		= ЗаказКлиентаСсылка;
	докР.РеализацияПоЗаказам = Истина; 
	докР.СкидкиРассчитаны 	= Истина;
	
	Попытка
		докР.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Проведен: " + докР , СтатусСообщения.Информация);
	Исключение
		Сообщить("Не удалось провести: " + докР + " " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Попытка
			докР.Записать(РежимЗаписиДокумента.Запись);
			Сообщить("Записан: " + докР , СтатусСообщения.Информация);
		Исключение
			//ЕНС. Здесь может быть ошибка "В текущей транзакции уже происходили ошибки!"
			Сообщить("Не удалось записать: " + докР + " " + ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецПопытки;  
	КонецПопытки;

	//--------------------- РС     crm_ИсходныеДанныеЗаказов
	
	НЗ = РегистрыСведений.ксп_ИсходныеДанныеЗаказов.СоздатьНаборЗаписей();
	НЗ.Отбор.id.Установить(id);
	НЗ.Отбор.site.Установить(site);
	
	НЗ.Прочитать();
	Для каждого стрк Из НЗ Цикл
		Если НЕ ЗначениеЗаполнено(стрк.Реализация) Тогда
			стрк.Реализация = ДокР.Ссылка;
		КонецЕсли;
	КонецЦикла;
	НЗ.Записать();
	
	Возврат ДокР.Ссылка;
	
КонецФункции



