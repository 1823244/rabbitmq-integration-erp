 	РезультатОбработки.ClassId = 21;		
  
    УзелWMS = ПланыОбмена.усОбменУправлениеСкладом.ЭтотУзел();
	МассивПроизводство = УзелWMS.Производство.ВыгрузитьКолонку("Партнеры");  	
	
	Запрос = Новый Запрос;
    Запрос.Текст =
	"ВЫБРАТЬ
	|	ИДДок.Идентификатор КАК ID,
	|	ВозвратТоваровОтКлиента.Ссылка,
	|	ВозвратТоваровОтКлиента.ПометкаУдаления КАК IsMarked,
	|	ВозвратТоваровОтКлиента.Дата КАК Date,
	|	ВозвратТоваровОтКлиента.Номер КАК Number,
	|	ВозвратТоваровОтКлиента.Комментарий КАК Description,
	|	ЕСТЬNULL(ИДКонтрагент.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК CounterpartyID,
	|	ЕСТЬNULL(ИДОрганизации.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК OrganizationID,
	|	""ВозвратОтКлиента"" КАК Source,
	|	ВозвратТоваровОтКлиента.Дата КАК ExpectedDate
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДДок
	|		ПО ВозвратТоваровОтКлиента.Ссылка = ИДДок.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДКонтрагент
	|		ПО ВозвратТоваровОтКлиента.Контрагент = ИДКонтрагент.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДОрганизации
	|		ПО ВозвратТоваровОтКлиента.Организация = ИДОрганизации.Объект
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.ID,
	|	втДокументы.Ссылка,
	|	втДокументы.IsMarked,
	|	втДокументы.Date,
	|	втДокументы.Number,
	|	втДокументы.Description,
	|	втДокументы.CounterpartyID,
	|	втДокументы.OrganizationID,
	|	втДокументы.Source,
	|	втДокументы.ExpectedDate
	|ИЗ
	|	втДокументы КАК втДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИДНомен.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК NomenclatureID,
	|	ВозвратТоваровОтКлиентаТовары.Количество КАК Quantity,
	|	ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок КАК QuantityUp,
	|	ЕСТЬNULL(ИДУпаковки.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК Upak,
	|	ВозвратТоваровОтКлиентаТовары.НомерСтроки КАК LineNum
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДНомен
	|		ПО ВозвратТоваровОтКлиентаТовары.Номенклатура = ИДНомен.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДУпаковки
	|		ПО ВозвратТоваровОтКлиентаТовары.Упаковка = ИДУпаковки.Объект
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				втДокументы.Ссылка
	|			ИЗ
	|				втДокументы КАК втДокументы)";     
	Запрос.УстановитьПараметр("Ссылка",  ОбъектОбработки.Ссылка);
	Запрос.УстановитьПараметр("Производство", МассивПроизводство);
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка   = Результат[1].Выбрать();
	ВыборкаРаспоряжения = Результат[2].Выбрать();
	
	ФиксСтруктураКласса = "ID,Date,Number,IsMarked,Source,OrganizationID,CounterpartyID,Description,ExpectedDate,GoodsLine";
	
	ФиксСтруктураРаспоряжения = "NomenclatureID,Quantity,QuantityUp,Upak,LineNum";
	
	Если Выборка.Следующий() тогда
		
//		Попытка
//			НачатьТранзакцию();	
	//		БлокировкаДанных = Новый БлокировкаДанных;
		//	ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.ВозвратТоваровОтКлиента");
		//	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		//	ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		//	БлокировкаДанных.Заблокировать();
		//	ЗафиксироватьТранзакцию();
	//	Исключение	
		//	Если ТранзакцияАктивна() Тогда 
			//	ОтменитьТранзакцию();
//			КонецЕсли;
	//		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;				
	//	КонецПопытки;
		
		Если СостояниеСообщения <>  Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки Тогда  	
		
			СтруктураДанных = Новый Структура(ФиксСтруктураКласса);		
			ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
			
			GoodsLine = Новый Массив;		
			Пока ВыборкаРаспоряжения.Следующий() Цикл			
				СтруктураДанныхРаспоряжения = Новый Структура(ФиксСтруктураРаспоряжения);
				ЗаполнитьЗначенияСвойств(СтруктураДанныхРаспоряжения, ВыборкаРаспоряжения);
				GoodsLine.Добавить(СтруктураДанныхРаспоряжения);
			КонецЦикла;	
			СтруктураДанных["GoodsLine"] = GoodsLine;
			
			РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(Перечисления.сшпФорматыСообщений.XML, СтруктураДанных);
			//ВРЕМ 31337
			РезультатОбработки.Receivers.Добавить("prod_wms");
		//РезультатОбработки.Receivers.Добавить("WMS_test");
		КонецЕсли;
		
	Иначе
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;		
	КонецЕсли;
