    РезультатОбработки.ClassId = 15;
		
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИДДок.Идентификатор КАК ID,
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.ПометкаУдаления КАК IsMarked,
	|	ПеремещениеТоваров.Дата КАК Date,
	|	ПеремещениеТоваров.Номер КАК Number,
	|	""ОтгрузкаНаСклад"" КАК Source,
	|	ПеремещениеТоваров.Комментарий КАК Description,
	|	ЕСТЬNULL(ИДКонтрагент.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК CounterpartyID,
	|	ПеремещениеТоваров.ВремяДоставкиС КАК ExpectedDate,
	|	ЕСТЬNULL(ИДОрганизации.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК OrganizationID
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДДок
	|		ПО ПеремещениеТоваров.Ссылка = ИДДок.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДКонтрагент
	|		ПО ПеремещениеТоваров.СкладПолучатель = ИДКонтрагент.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДОрганизации
	|		ПО ПеремещениеТоваров.Организация = ИДОрганизации.Объект
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.ID,
	|	втДокументы.Ссылка,
	|	втДокументы.IsMarked,
	|	втДокументы.Date,
	|	втДокументы.Number,
	|	втДокументы.Source,
	|	втДокументы.Description,
	|	втДокументы.CounterpartyID,
	|	втДокументы.ExpectedDate,
	|	втДокументы.OrganizationID
	|ИЗ
	|	втДокументы КАК втДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИДНомен.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК NomenclatureID,
	|	ПеремещениеТоваровТовары.Количество КАК Quantity,
	|	ПеремещениеТоваровТовары.КоличествоУпаковок КАК QuantityUp,
	|	ЕСТЬNULL(ИДУпаковки.Идентификатор, ""00000000-0000-0000-0000-000000000000"") КАК Upak,
	|	ПеремещениеТоваровТовары.НомерСтроки КАК LineNum
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДНомен
	|		ПО ПеремещениеТоваровТовары.Номенклатура = ИДНомен.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.упИдентификаторыОбмена КАК ИДУпаковки
	|		ПО ПеремещениеТоваровТовары.Упаковка = ИДУпаковки.Объект
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				втДокументы.Ссылка
	|			ИЗ
	|				втДокументы КАК втДокументы)"; 
	Запрос.УстановитьПараметр("Ссылка",   ОбъектОбработки.Ссылка);     	
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка   = Результат[1].Выбрать();
	ВыборкаРаспоряжения = Результат[2].Выбрать();
	
	ФиксСтруктураКласса = "ID,Date,Number,IsMarked,Source,OrganizationID,CounterpartyID,Description,ExpectedDate,GoodsLine";
	
	ФиксСтруктураРаспоряжения = "NomenclatureID,Quantity,QuantityUp,Upak,LineNum";
	
	Если Выборка.Следующий() тогда
		
		Попытка
			НачатьТранзакцию();	
			БлокировкаДанных = Новый БлокировкаДанных;
			ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.ПеремещениеТоваров");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			БлокировкаДанных.Заблокировать();
			ЗафиксироватьТранзакцию();
		Исключение	
			Если ТранзакцияАктивна() Тогда 
				ОтменитьТранзакцию();
			КонецЕсли;
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;				
		КонецПопытки;
		
		Если СостояниеСообщения <>  Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки Тогда  	
		
			СтруктураДанных = Новый Структура(ФиксСтруктураКласса);		
			ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
			
			GoodsLine = Новый Массив;		
			Пока ВыборкаРаспоряжения.Следующий() Цикл			
				СтруктураДанныхРаспоряжения = Новый Структура(ФиксСтруктураРаспоряжения);
				ЗаполнитьЗначенияСвойств(СтруктураДанныхРаспоряжения, ВыборкаРаспоряжения);
				GoodsLine.Добавить(СтруктураДанныхРаспоряжения);
			КонецЦикла;	
			СтруктураДанных["GoodsLine"] = GoodsLine;
			
			РезультатОбработки.Body = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(Перечисления.сшпФорматыСообщений.XML, СтруктураДанных);
			//ВРЕМ
		РезультатОбработки.Receivers.Добавить("wms");	
		//РезультатОбработки.Receivers.Добавить("WMS_test");
			
		КонецЕсли;
		
	Иначе
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОбработкаОтменена;		
	КонецЕсли;

